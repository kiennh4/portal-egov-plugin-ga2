<%--
/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%@page import="com.liferay.portlet.assetpublisher.util.AssetEntryCache"%>
<%
if(results.size() > 0 && displayStyle.equals("full-content-first-asset")){
	
	int assetEntryIndex = 0;
	
	AssetEntryCache assetEntry = (AssetEntryCache)results.get(assetEntryIndex);
	
	String className = PortalUtil.getClassName(assetEntry.getClassNameId());
	long classPK = assetEntry.getClassPK();

	AssetRendererFactory assetRendererFactory = AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(className);

	AssetRenderer assetRenderer = null;

	try {
		assetRenderer = assetRendererFactory.getAssetRenderer(classPK);
	}
	catch (Exception e) {
		if (_log.isWarnEnabled()) {
			_log.warn(e, e);
		}
	}
	
	if(assetRenderer != null){
		String title = assetRenderer.getTitle(locale);
	
		boolean show = true;
		boolean print = false;
		
		request.setAttribute("view.jsp-assetEntryIndex", new Integer(assetEntryIndex));
		request.setAttribute("view.jsp-assetEntry", assetEntry);
		request.setAttribute("view.jsp-assetRendererFactory", assetRendererFactory);
		request.setAttribute("view.jsp-assetRenderer", assetRenderer);
	
		request.setAttribute("view.jsp-title", title);
	
		request.setAttribute("view.jsp-show", new Boolean(show));
		request.setAttribute("view.jsp-print", new Boolean(print));

%>

		<liferay-util:include page="/html/portlet/asset_publisher/display/full_content.jsp" />
<%
	}
}else{
	
	for (int assetEntryIndex = 0; assetEntryIndex < results.size(); assetEntryIndex++) {
		AssetEntryCache assetEntry = new AssetEntryCache();
		
		assetEntry = (AssetEntryCache)results.get(assetEntryIndex);
	
		String className = PortalUtil.getClassName(assetEntry.getClassNameId());
		long classPK = assetEntry.getClassPK();
	
		AssetRendererFactory assetRendererFactory = AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(className);
	
		if (assetRendererFactory == null) {
			continue;
		}
	
		AssetRenderer assetRenderer = null;
	
		try {
			assetRenderer = assetRendererFactory.getAssetRenderer(classPK);
		}
		catch (Exception e) {
			if (_log.isWarnEnabled()) {
				_log.warn(e, e);
			}
		}
	
		if ((assetRenderer == null) || !assetRenderer.isDisplayable()) {
			continue;
		}
	
		String title = assetRenderer.getTitle(locale);
	
		boolean show = true;
		boolean print = false;
	
		request.setAttribute("view.jsp-assetEntryIndex", new Integer(assetEntryIndex));
	
		request.setAttribute("view.jsp-assetEntry", assetEntry);
		request.setAttribute("view.jsp-assetRendererFactory", assetRendererFactory);
		request.setAttribute("view.jsp-assetRenderer", assetRenderer);
	
		request.setAttribute("view.jsp-title", title);
	
		request.setAttribute("view.jsp-show", new Boolean(show));
		request.setAttribute("view.jsp-print", new Boolean(print));
	
		try {
%>
<%=assetEntry.getTitle() %>	
			<%@ include file="/html/portlet/asset_publisher/view_display.jspf" %>
	
<%
		}
		catch (Exception e) {
			_log.error(e.getMessage());
		}
	}
}
%>