/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.portal_egov.portlet.legal_faq.service.base;

import com.liferay.counter.service.CounterLocalService;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.ResourceLocalService;
import com.liferay.portal.service.ResourceService;
import com.liferay.portal.service.UserLocalService;
import com.liferay.portal.service.UserService;
import com.liferay.portal.service.persistence.ResourcePersistence;
import com.liferay.portal.service.persistence.UserPersistence;

import com.portal_egov.portlet.legal_faq.model.LegalFAQEntry;
import com.portal_egov.portlet.legal_faq.service.LegalFAQCategoryLocalService;
import com.portal_egov.portlet.legal_faq.service.LegalFAQCategoryService;
import com.portal_egov.portlet.legal_faq.service.LegalFAQEntryLocalService;
import com.portal_egov.portlet.legal_faq.service.LegalFAQEntryService;
import com.portal_egov.portlet.legal_faq.service.persistence.LegalFAQCategoryFinder;
import com.portal_egov.portlet.legal_faq.service.persistence.LegalFAQCategoryPersistence;
import com.portal_egov.portlet.legal_faq.service.persistence.LegalFAQEntryFinder;
import com.portal_egov.portlet.legal_faq.service.persistence.LegalFAQEntryPersistence;

import javax.sql.DataSource;

/**
 * The base implementation of the legal f a q entry remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.portal_egov.portlet.legal_faq.service.impl.LegalFAQEntryServiceImpl}.
 * </p>
 *
 * @author HungDX
 * @see com.portal_egov.portlet.legal_faq.service.impl.LegalFAQEntryServiceImpl
 * @see com.portal_egov.portlet.legal_faq.service.LegalFAQEntryServiceUtil
 * @generated
 */
public abstract class LegalFAQEntryServiceBaseImpl extends BaseServiceImpl
	implements LegalFAQEntryService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.portal_egov.portlet.legal_faq.service.LegalFAQEntryServiceUtil} to access the legal f a q entry remote service.
	 */

	/**
	 * Returns the legal f a q category local service.
	 *
	 * @return the legal f a q category local service
	 */
	public LegalFAQCategoryLocalService getLegalFAQCategoryLocalService() {
		return legalFAQCategoryLocalService;
	}

	/**
	 * Sets the legal f a q category local service.
	 *
	 * @param legalFAQCategoryLocalService the legal f a q category local service
	 */
	public void setLegalFAQCategoryLocalService(
		LegalFAQCategoryLocalService legalFAQCategoryLocalService) {
		this.legalFAQCategoryLocalService = legalFAQCategoryLocalService;
	}

	/**
	 * Returns the legal f a q category remote service.
	 *
	 * @return the legal f a q category remote service
	 */
	public LegalFAQCategoryService getLegalFAQCategoryService() {
		return legalFAQCategoryService;
	}

	/**
	 * Sets the legal f a q category remote service.
	 *
	 * @param legalFAQCategoryService the legal f a q category remote service
	 */
	public void setLegalFAQCategoryService(
		LegalFAQCategoryService legalFAQCategoryService) {
		this.legalFAQCategoryService = legalFAQCategoryService;
	}

	/**
	 * Returns the legal f a q category persistence.
	 *
	 * @return the legal f a q category persistence
	 */
	public LegalFAQCategoryPersistence getLegalFAQCategoryPersistence() {
		return legalFAQCategoryPersistence;
	}

	/**
	 * Sets the legal f a q category persistence.
	 *
	 * @param legalFAQCategoryPersistence the legal f a q category persistence
	 */
	public void setLegalFAQCategoryPersistence(
		LegalFAQCategoryPersistence legalFAQCategoryPersistence) {
		this.legalFAQCategoryPersistence = legalFAQCategoryPersistence;
	}

	/**
	 * Returns the legal f a q category finder.
	 *
	 * @return the legal f a q category finder
	 */
	public LegalFAQCategoryFinder getLegalFAQCategoryFinder() {
		return legalFAQCategoryFinder;
	}

	/**
	 * Sets the legal f a q category finder.
	 *
	 * @param legalFAQCategoryFinder the legal f a q category finder
	 */
	public void setLegalFAQCategoryFinder(
		LegalFAQCategoryFinder legalFAQCategoryFinder) {
		this.legalFAQCategoryFinder = legalFAQCategoryFinder;
	}

	/**
	 * Returns the legal f a q entry local service.
	 *
	 * @return the legal f a q entry local service
	 */
	public LegalFAQEntryLocalService getLegalFAQEntryLocalService() {
		return legalFAQEntryLocalService;
	}

	/**
	 * Sets the legal f a q entry local service.
	 *
	 * @param legalFAQEntryLocalService the legal f a q entry local service
	 */
	public void setLegalFAQEntryLocalService(
		LegalFAQEntryLocalService legalFAQEntryLocalService) {
		this.legalFAQEntryLocalService = legalFAQEntryLocalService;
	}

	/**
	 * Returns the legal f a q entry remote service.
	 *
	 * @return the legal f a q entry remote service
	 */
	public LegalFAQEntryService getLegalFAQEntryService() {
		return legalFAQEntryService;
	}

	/**
	 * Sets the legal f a q entry remote service.
	 *
	 * @param legalFAQEntryService the legal f a q entry remote service
	 */
	public void setLegalFAQEntryService(
		LegalFAQEntryService legalFAQEntryService) {
		this.legalFAQEntryService = legalFAQEntryService;
	}

	/**
	 * Returns the legal f a q entry persistence.
	 *
	 * @return the legal f a q entry persistence
	 */
	public LegalFAQEntryPersistence getLegalFAQEntryPersistence() {
		return legalFAQEntryPersistence;
	}

	/**
	 * Sets the legal f a q entry persistence.
	 *
	 * @param legalFAQEntryPersistence the legal f a q entry persistence
	 */
	public void setLegalFAQEntryPersistence(
		LegalFAQEntryPersistence legalFAQEntryPersistence) {
		this.legalFAQEntryPersistence = legalFAQEntryPersistence;
	}

	/**
	 * Returns the legal f a q entry finder.
	 *
	 * @return the legal f a q entry finder
	 */
	public LegalFAQEntryFinder getLegalFAQEntryFinder() {
		return legalFAQEntryFinder;
	}

	/**
	 * Sets the legal f a q entry finder.
	 *
	 * @param legalFAQEntryFinder the legal f a q entry finder
	 */
	public void setLegalFAQEntryFinder(LegalFAQEntryFinder legalFAQEntryFinder) {
		this.legalFAQEntryFinder = legalFAQEntryFinder;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the resource remote service.
	 *
	 * @return the resource remote service
	 */
	public ResourceService getResourceService() {
		return resourceService;
	}

	/**
	 * Sets the resource remote service.
	 *
	 * @param resourceService the resource remote service
	 */
	public void setResourceService(ResourceService resourceService) {
		this.resourceService = resourceService;
	}

	/**
	 * Returns the resource persistence.
	 *
	 * @return the resource persistence
	 */
	public ResourcePersistence getResourcePersistence() {
		return resourcePersistence;
	}

	/**
	 * Sets the resource persistence.
	 *
	 * @param resourcePersistence the resource persistence
	 */
	public void setResourcePersistence(ResourcePersistence resourcePersistence) {
		this.resourcePersistence = resourcePersistence;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
	}

	protected Class<?> getModelClass() {
		return LegalFAQEntry.class;
	}

	protected String getModelClassName() {
		return LegalFAQEntry.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = legalFAQEntryPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = LegalFAQCategoryLocalService.class)
	protected LegalFAQCategoryLocalService legalFAQCategoryLocalService;
	@BeanReference(type = LegalFAQCategoryService.class)
	protected LegalFAQCategoryService legalFAQCategoryService;
	@BeanReference(type = LegalFAQCategoryPersistence.class)
	protected LegalFAQCategoryPersistence legalFAQCategoryPersistence;
	@BeanReference(type = LegalFAQCategoryFinder.class)
	protected LegalFAQCategoryFinder legalFAQCategoryFinder;
	@BeanReference(type = LegalFAQEntryLocalService.class)
	protected LegalFAQEntryLocalService legalFAQEntryLocalService;
	@BeanReference(type = LegalFAQEntryService.class)
	protected LegalFAQEntryService legalFAQEntryService;
	@BeanReference(type = LegalFAQEntryPersistence.class)
	protected LegalFAQEntryPersistence legalFAQEntryPersistence;
	@BeanReference(type = LegalFAQEntryFinder.class)
	protected LegalFAQEntryFinder legalFAQEntryFinder;
	@BeanReference(type = CounterLocalService.class)
	protected CounterLocalService counterLocalService;
	@BeanReference(type = ResourceLocalService.class)
	protected ResourceLocalService resourceLocalService;
	@BeanReference(type = ResourceService.class)
	protected ResourceService resourceService;
	@BeanReference(type = ResourcePersistence.class)
	protected ResourcePersistence resourcePersistence;
	@BeanReference(type = UserLocalService.class)
	protected UserLocalService userLocalService;
	@BeanReference(type = UserService.class)
	protected UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private LegalFAQEntryServiceClpInvoker _clpInvoker = new LegalFAQEntryServiceClpInvoker();
}