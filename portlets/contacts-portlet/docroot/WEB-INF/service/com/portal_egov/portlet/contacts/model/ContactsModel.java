/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.portal_egov.portlet.contacts.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.GroupedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Contacts service. Represents a row in the &quot;Contacts&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.portal_egov.portlet.contacts.model.impl.ContactsModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.portal_egov.portlet.contacts.model.impl.ContactsImpl}.
 * </p>
 *
 * @author HungDX
 * @see Contacts
 * @see com.portal_egov.portlet.contacts.model.impl.ContactsImpl
 * @see com.portal_egov.portlet.contacts.model.impl.ContactsModelImpl
 * @generated
 */
public interface ContactsModel extends BaseModel<Contacts>, GroupedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a contacts model instance should use the {@link Contacts} interface instead.
	 */

	/**
	 * Returns the primary key of this contacts.
	 *
	 * @return the primary key of this contacts
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this contacts.
	 *
	 * @param primaryKey the primary key of this contacts
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the contact ID of this contacts.
	 *
	 * @return the contact ID of this contacts
	 */
	public long getContactId();

	/**
	 * Sets the contact ID of this contacts.
	 *
	 * @param contactId the contact ID of this contacts
	 */
	public void setContactId(long contactId);

	/**
	 * Returns the group ID of this contacts.
	 *
	 * @return the group ID of this contacts
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this contacts.
	 *
	 * @param groupId the group ID of this contacts
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this contacts.
	 *
	 * @return the company ID of this contacts
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this contacts.
	 *
	 * @param companyId the company ID of this contacts
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this contacts.
	 *
	 * @return the user ID of this contacts
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this contacts.
	 *
	 * @param userId the user ID of this contacts
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this contacts.
	 *
	 * @return the user uuid of this contacts
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this contacts.
	 *
	 * @param userUuid the user uuid of this contacts
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this contacts.
	 *
	 * @return the user name of this contacts
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this contacts.
	 *
	 * @param userName the user name of this contacts
	 */
	public void setUserName(String userName);

	/**
	 * Returns the create date of this contacts.
	 *
	 * @return the create date of this contacts
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this contacts.
	 *
	 * @param createDate the create date of this contacts
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this contacts.
	 *
	 * @return the modified date of this contacts
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this contacts.
	 *
	 * @param modifiedDate the modified date of this contacts
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the department ID of this contacts.
	 *
	 * @return the department ID of this contacts
	 */
	public long getDepartmentId();

	/**
	 * Sets the department ID of this contacts.
	 *
	 * @param departmentId the department ID of this contacts
	 */
	public void setDepartmentId(long departmentId);

	/**
	 * Returns the image ID of this contacts.
	 *
	 * @return the image ID of this contacts
	 */
	public long getImageId();

	/**
	 * Sets the image ID of this contacts.
	 *
	 * @param imageId the image ID of this contacts
	 */
	public void setImageId(long imageId);

	/**
	 * Returns the contact name of this contacts.
	 *
	 * @return the contact name of this contacts
	 */
	@AutoEscape
	public String getContactName();

	/**
	 * Sets the contact name of this contacts.
	 *
	 * @param contactName the contact name of this contacts
	 */
	public void setContactName(String contactName);

	/**
	 * Returns the job title of this contacts.
	 *
	 * @return the job title of this contacts
	 */
	@AutoEscape
	public String getJobTitle();

	/**
	 * Sets the job title of this contacts.
	 *
	 * @param jobTitle the job title of this contacts
	 */
	public void setJobTitle(String jobTitle);

	/**
	 * Returns the phone numbers of this contacts.
	 *
	 * @return the phone numbers of this contacts
	 */
	@AutoEscape
	public String getPhoneNumbers();

	/**
	 * Sets the phone numbers of this contacts.
	 *
	 * @param phoneNumbers the phone numbers of this contacts
	 */
	public void setPhoneNumbers(String phoneNumbers);

	/**
	 * Returns the home phone of this contacts.
	 *
	 * @return the home phone of this contacts
	 */
	@AutoEscape
	public String getHomePhone();

	/**
	 * Sets the home phone of this contacts.
	 *
	 * @param homePhone the home phone of this contacts
	 */
	public void setHomePhone(String homePhone);

	/**
	 * Returns the mobile of this contacts.
	 *
	 * @return the mobile of this contacts
	 */
	@AutoEscape
	public String getMobile();

	/**
	 * Sets the mobile of this contacts.
	 *
	 * @param mobile the mobile of this contacts
	 */
	public void setMobile(String mobile);

	/**
	 * Returns the email of this contacts.
	 *
	 * @return the email of this contacts
	 */
	@AutoEscape
	public String getEmail();

	/**
	 * Sets the email of this contacts.
	 *
	 * @param email the email of this contacts
	 */
	public void setEmail(String email);

	/**
	 * Returns the display priority of this contacts.
	 *
	 * @return the display priority of this contacts
	 */
	public int getDisplayPriority();

	/**
	 * Sets the display priority of this contacts.
	 *
	 * @param displayPriority the display priority of this contacts
	 */
	public void setDisplayPriority(int displayPriority);

	/**
	 * Returns the contact status of this contacts.
	 *
	 * @return the contact status of this contacts
	 */
	public int getContactStatus();

	/**
	 * Sets the contact status of this contacts.
	 *
	 * @param contactStatus the contact status of this contacts
	 */
	public void setContactStatus(int contactStatus);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(Contacts contacts);

	public int hashCode();

	public CacheModel<Contacts> toCacheModel();

	public Contacts toEscapedModel();

	public String toString();

	public String toXmlString();
}