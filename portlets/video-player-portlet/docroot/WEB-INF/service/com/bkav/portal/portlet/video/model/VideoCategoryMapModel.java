/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.bkav.portal.portlet.video.model;

import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the VideoCategoryMap service. Represents a row in the &quot;VideoCategoryMap&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.bkav.portal.portlet.video.model.impl.VideoCategoryMapModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.bkav.portal.portlet.video.model.impl.VideoCategoryMapImpl}.
 * </p>
 *
 * @author hungdx
 * @see VideoCategoryMap
 * @see com.bkav.portal.portlet.video.model.impl.VideoCategoryMapImpl
 * @see com.bkav.portal.portlet.video.model.impl.VideoCategoryMapModelImpl
 * @generated
 */
public interface VideoCategoryMapModel extends BaseModel<VideoCategoryMap> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a video category map model instance should use the {@link VideoCategoryMap} interface instead.
	 */

	/**
	 * Returns the primary key of this video category map.
	 *
	 * @return the primary key of this video category map
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this video category map.
	 *
	 * @param primaryKey the primary key of this video category map
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the map ID of this video category map.
	 *
	 * @return the map ID of this video category map
	 */
	public long getMapId();

	/**
	 * Sets the map ID of this video category map.
	 *
	 * @param mapId the map ID of this video category map
	 */
	public void setMapId(long mapId);

	/**
	 * Returns the category ID of this video category map.
	 *
	 * @return the category ID of this video category map
	 */
	public long getCategoryId();

	/**
	 * Sets the category ID of this video category map.
	 *
	 * @param categoryId the category ID of this video category map
	 */
	public void setCategoryId(long categoryId);

	/**
	 * Returns the entry ID of this video category map.
	 *
	 * @return the entry ID of this video category map
	 */
	public long getEntryId();

	/**
	 * Sets the entry ID of this video category map.
	 *
	 * @param entryId the entry ID of this video category map
	 */
	public void setEntryId(long entryId);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(VideoCategoryMap videoCategoryMap);

	public int hashCode();

	public CacheModel<VideoCategoryMap> toCacheModel();

	public VideoCategoryMap toEscapedModel();

	public String toString();

	public String toXmlString();
}