/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.bkav.portal.portlet.video.model.impl;

import com.bkav.portal.portlet.video.model.VideoEntry;
import com.bkav.portal.portlet.video.model.VideoEntryModel;
import com.bkav.portal.portlet.video.model.VideoEntrySoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the VideoEntry service. Represents a row in the &quot;VideoEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.bkav.portal.portlet.video.model.VideoEntryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VideoEntryImpl}.
 * </p>
 *
 * @author hungdx
 * @see VideoEntryImpl
 * @see com.bkav.portal.portlet.video.model.VideoEntry
 * @see com.bkav.portal.portlet.video.model.VideoEntryModel
 * @generated
 */
@JSON(strict = true)
public class VideoEntryModelImpl extends BaseModelImpl<VideoEntry>
	implements VideoEntryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a video entry model instance should use the {@link com.bkav.portal.portlet.video.model.VideoEntry} interface instead.
	 */
	public static final String TABLE_NAME = "VideoEntry";
	public static final Object[][] TABLE_COLUMNS = {
			{ "entryId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "videoType", Types.VARCHAR },
			{ "videoUrl", Types.VARCHAR },
			{ "videoFileId", Types.BIGINT },
			{ "thumbnailImage", Types.BOOLEAN },
			{ "thumbnailImageId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table VideoEntry (entryId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,name VARCHAR(300) null,description VARCHAR(75) null,videoType VARCHAR(75) null,videoUrl VARCHAR(300) null,videoFileId LONG,thumbnailImage BOOLEAN,thumbnailImageId LONG)";
	public static final String TABLE_SQL_DROP = "drop table VideoEntry";
	public static final String ORDER_BY_JPQL = " ORDER BY videoEntry.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY VideoEntry.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.bkav.portal.portlet.video.model.VideoEntry"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.bkav.portal.portlet.video.model.VideoEntry"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.bkav.portal.portlet.video.model.VideoEntry"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static VideoEntry toModel(VideoEntrySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		VideoEntry model = new VideoEntryImpl();

		model.setEntryId(soapModel.getEntryId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setName(soapModel.getName());
		model.setDescription(soapModel.getDescription());
		model.setVideoType(soapModel.getVideoType());
		model.setVideoUrl(soapModel.getVideoUrl());
		model.setVideoFileId(soapModel.getVideoFileId());
		model.setThumbnailImage(soapModel.getThumbnailImage());
		model.setThumbnailImageId(soapModel.getThumbnailImageId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<VideoEntry> toModels(VideoEntrySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<VideoEntry> models = new ArrayList<VideoEntry>(soapModels.length);

		for (VideoEntrySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.bkav.portal.portlet.video.model.VideoEntry"));

	public VideoEntryModelImpl() {
	}

	public long getPrimaryKey() {
		return _entryId;
	}

	public void setPrimaryKey(long primaryKey) {
		setEntryId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_entryId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return VideoEntry.class;
	}

	public String getModelClassName() {
		return VideoEntry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("entryId", getEntryId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("name", getName());
		attributes.put("description", getDescription());
		attributes.put("videoType", getVideoType());
		attributes.put("videoUrl", getVideoUrl());
		attributes.put("videoFileId", getVideoFileId());
		attributes.put("thumbnailImage", getThumbnailImage());
		attributes.put("thumbnailImageId", getThumbnailImageId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long entryId = (Long)attributes.get("entryId");

		if (entryId != null) {
			setEntryId(entryId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String videoType = (String)attributes.get("videoType");

		if (videoType != null) {
			setVideoType(videoType);
		}

		String videoUrl = (String)attributes.get("videoUrl");

		if (videoUrl != null) {
			setVideoUrl(videoUrl);
		}

		Long videoFileId = (Long)attributes.get("videoFileId");

		if (videoFileId != null) {
			setVideoFileId(videoFileId);
		}

		Boolean thumbnailImage = (Boolean)attributes.get("thumbnailImage");

		if (thumbnailImage != null) {
			setThumbnailImage(thumbnailImage);
		}

		Long thumbnailImageId = (Long)attributes.get("thumbnailImageId");

		if (thumbnailImageId != null) {
			setThumbnailImageId(thumbnailImageId);
		}
	}

	@JSON
	public long getEntryId() {
		return _entryId;
	}

	public void setEntryId(long entryId) {
		_entryId = entryId;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	public void setName(String name) {
		_name = name;
	}

	@JSON
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	public String getVideoType() {
		if (_videoType == null) {
			return StringPool.BLANK;
		}
		else {
			return _videoType;
		}
	}

	public void setVideoType(String videoType) {
		_videoType = videoType;
	}

	@JSON
	public String getVideoUrl() {
		if (_videoUrl == null) {
			return StringPool.BLANK;
		}
		else {
			return _videoUrl;
		}
	}

	public void setVideoUrl(String videoUrl) {
		_videoUrl = videoUrl;
	}

	@JSON
	public long getVideoFileId() {
		return _videoFileId;
	}

	public void setVideoFileId(long videoFileId) {
		_videoFileId = videoFileId;
	}

	@JSON
	public boolean getThumbnailImage() {
		return _thumbnailImage;
	}

	public boolean isThumbnailImage() {
		return _thumbnailImage;
	}

	public void setThumbnailImage(boolean thumbnailImage) {
		_thumbnailImage = thumbnailImage;
	}

	@JSON
	public long getThumbnailImageId() {
		return _thumbnailImageId;
	}

	public void setThumbnailImageId(long thumbnailImageId) {
		_thumbnailImageId = thumbnailImageId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			VideoEntry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public VideoEntry toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (VideoEntry)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		VideoEntryImpl videoEntryImpl = new VideoEntryImpl();

		videoEntryImpl.setEntryId(getEntryId());
		videoEntryImpl.setGroupId(getGroupId());
		videoEntryImpl.setCompanyId(getCompanyId());
		videoEntryImpl.setUserId(getUserId());
		videoEntryImpl.setUserName(getUserName());
		videoEntryImpl.setCreateDate(getCreateDate());
		videoEntryImpl.setModifiedDate(getModifiedDate());
		videoEntryImpl.setName(getName());
		videoEntryImpl.setDescription(getDescription());
		videoEntryImpl.setVideoType(getVideoType());
		videoEntryImpl.setVideoUrl(getVideoUrl());
		videoEntryImpl.setVideoFileId(getVideoFileId());
		videoEntryImpl.setThumbnailImage(getThumbnailImage());
		videoEntryImpl.setThumbnailImageId(getThumbnailImageId());

		videoEntryImpl.resetOriginalValues();

		return videoEntryImpl;
	}

	public int compareTo(VideoEntry videoEntry) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), videoEntry.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		VideoEntry videoEntry = null;

		try {
			videoEntry = (VideoEntry)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = videoEntry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		VideoEntryModelImpl videoEntryModelImpl = this;

		videoEntryModelImpl._originalGroupId = videoEntryModelImpl._groupId;

		videoEntryModelImpl._setOriginalGroupId = false;

		videoEntryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VideoEntry> toCacheModel() {
		VideoEntryCacheModel videoEntryCacheModel = new VideoEntryCacheModel();

		videoEntryCacheModel.entryId = getEntryId();

		videoEntryCacheModel.groupId = getGroupId();

		videoEntryCacheModel.companyId = getCompanyId();

		videoEntryCacheModel.userId = getUserId();

		videoEntryCacheModel.userName = getUserName();

		String userName = videoEntryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			videoEntryCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			videoEntryCacheModel.createDate = createDate.getTime();
		}
		else {
			videoEntryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			videoEntryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			videoEntryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		videoEntryCacheModel.name = getName();

		String name = videoEntryCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			videoEntryCacheModel.name = null;
		}

		videoEntryCacheModel.description = getDescription();

		String description = videoEntryCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			videoEntryCacheModel.description = null;
		}

		videoEntryCacheModel.videoType = getVideoType();

		String videoType = videoEntryCacheModel.videoType;

		if ((videoType != null) && (videoType.length() == 0)) {
			videoEntryCacheModel.videoType = null;
		}

		videoEntryCacheModel.videoUrl = getVideoUrl();

		String videoUrl = videoEntryCacheModel.videoUrl;

		if ((videoUrl != null) && (videoUrl.length() == 0)) {
			videoEntryCacheModel.videoUrl = null;
		}

		videoEntryCacheModel.videoFileId = getVideoFileId();

		videoEntryCacheModel.thumbnailImage = getThumbnailImage();

		videoEntryCacheModel.thumbnailImageId = getThumbnailImageId();

		return videoEntryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{entryId=");
		sb.append(getEntryId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", videoType=");
		sb.append(getVideoType());
		sb.append(", videoUrl=");
		sb.append(getVideoUrl());
		sb.append(", videoFileId=");
		sb.append(getVideoFileId());
		sb.append(", thumbnailImage=");
		sb.append(getThumbnailImage());
		sb.append(", thumbnailImageId=");
		sb.append(getThumbnailImageId());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.bkav.portal.portlet.video.model.VideoEntry");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>entryId</column-name><column-value><![CDATA[");
		sb.append(getEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>videoType</column-name><column-value><![CDATA[");
		sb.append(getVideoType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>videoUrl</column-name><column-value><![CDATA[");
		sb.append(getVideoUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>videoFileId</column-name><column-value><![CDATA[");
		sb.append(getVideoFileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>thumbnailImage</column-name><column-value><![CDATA[");
		sb.append(getThumbnailImage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>thumbnailImageId</column-name><column-value><![CDATA[");
		sb.append(getThumbnailImageId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = VideoEntry.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			VideoEntry.class
		};
	private long _entryId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _name;
	private String _description;
	private String _videoType;
	private String _videoUrl;
	private long _videoFileId;
	private boolean _thumbnailImage;
	private long _thumbnailImageId;
	private long _columnBitmask;
	private VideoEntry _escapedModelProxy;
}