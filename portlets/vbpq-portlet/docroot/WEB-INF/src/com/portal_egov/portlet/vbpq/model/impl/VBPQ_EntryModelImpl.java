/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.portal_egov.portlet.vbpq.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.portal_egov.portlet.vbpq.model.VBPQ_Entry;
import com.portal_egov.portlet.vbpq.model.VBPQ_EntryModel;
import com.portal_egov.portlet.vbpq.model.VBPQ_EntrySoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the VBPQ_Entry service. Represents a row in the &quot;vbpq_entry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.portal_egov.portlet.vbpq.model.VBPQ_EntryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VBPQ_EntryImpl}.
 * </p>
 *
 * @author HungDX
 * @see VBPQ_EntryImpl
 * @see com.portal_egov.portlet.vbpq.model.VBPQ_Entry
 * @see com.portal_egov.portlet.vbpq.model.VBPQ_EntryModel
 * @generated
 */
@JSON(strict = true)
public class VBPQ_EntryModelImpl extends BaseModelImpl<VBPQ_Entry>
	implements VBPQ_EntryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a v b p q_ entry model instance should use the {@link com.portal_egov.portlet.vbpq.model.VBPQ_Entry} interface instead.
	 */
	public static final String TABLE_NAME = "vbpq_entry";
	public static final Object[][] TABLE_COLUMNS = {
			{ "entryId", Types.BIGINT },
			{ "departmentId", Types.BIGINT },
			{ "categoryId", Types.BIGINT },
			{ "docTypeId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "entryName", Types.VARCHAR },
			{ "entryCode", Types.VARCHAR },
			{ "entryDesc", Types.VARCHAR },
			{ "fileAttachmentURL", Types.VARCHAR },
			{ "publicatorName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "publishDate", Types.TIMESTAMP },
			{ "executeDate", Types.TIMESTAMP },
			{ "expirationDate", Types.TIMESTAMP },
			{ "neverExpired", Types.BOOLEAN },
			{ "active_", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table vbpq_entry (entryId LONG not null primary key,departmentId LONG,categoryId LONG,docTypeId LONG,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(75) null,entryName STRING null,entryCode VARCHAR(2000) null,entryDesc STRING null,fileAttachmentURL VARCHAR(2000) null,publicatorName VARCHAR(150) null,createDate DATE null,modifiedDate DATE null,publishDate DATE null,executeDate DATE null,expirationDate DATE null,neverExpired BOOLEAN,active_ BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table vbpq_entry";
	public static final String ORDER_BY_JPQL = " ORDER BY vbpq_Entry.publishDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY vbpq_entry.publishDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.portal_egov.portlet.vbpq.model.VBPQ_Entry"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.portal_egov.portlet.vbpq.model.VBPQ_Entry"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.portal_egov.portlet.vbpq.model.VBPQ_Entry"),
			true);
	public static long ACTIVE_COLUMN_BITMASK = 1L;
	public static long CATEGORYID_COLUMN_BITMASK = 2L;
	public static long COMPANYID_COLUMN_BITMASK = 4L;
	public static long DEPARTMENTID_COLUMN_BITMASK = 8L;
	public static long DOCTYPEID_COLUMN_BITMASK = 16L;
	public static long GROUPID_COLUMN_BITMASK = 32L;
	public static long NEVEREXPIRED_COLUMN_BITMASK = 64L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static VBPQ_Entry toModel(VBPQ_EntrySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		VBPQ_Entry model = new VBPQ_EntryImpl();

		model.setEntryId(soapModel.getEntryId());
		model.setDepartmentId(soapModel.getDepartmentId());
		model.setCategoryId(soapModel.getCategoryId());
		model.setDocTypeId(soapModel.getDocTypeId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setEntryName(soapModel.getEntryName());
		model.setEntryCode(soapModel.getEntryCode());
		model.setEntryDesc(soapModel.getEntryDesc());
		model.setFileAttachmentURL(soapModel.getFileAttachmentURL());
		model.setPublicatorName(soapModel.getPublicatorName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setPublishDate(soapModel.getPublishDate());
		model.setExecuteDate(soapModel.getExecuteDate());
		model.setExpirationDate(soapModel.getExpirationDate());
		model.setNeverExpired(soapModel.getNeverExpired());
		model.setActive(soapModel.getActive());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<VBPQ_Entry> toModels(VBPQ_EntrySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<VBPQ_Entry> models = new ArrayList<VBPQ_Entry>(soapModels.length);

		for (VBPQ_EntrySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.portal_egov.portlet.vbpq.model.VBPQ_Entry"));

	public VBPQ_EntryModelImpl() {
	}

	public long getPrimaryKey() {
		return _entryId;
	}

	public void setPrimaryKey(long primaryKey) {
		setEntryId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_entryId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return VBPQ_Entry.class;
	}

	public String getModelClassName() {
		return VBPQ_Entry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("entryId", getEntryId());
		attributes.put("departmentId", getDepartmentId());
		attributes.put("categoryId", getCategoryId());
		attributes.put("docTypeId", getDocTypeId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("entryName", getEntryName());
		attributes.put("entryCode", getEntryCode());
		attributes.put("entryDesc", getEntryDesc());
		attributes.put("fileAttachmentURL", getFileAttachmentURL());
		attributes.put("publicatorName", getPublicatorName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("publishDate", getPublishDate());
		attributes.put("executeDate", getExecuteDate());
		attributes.put("expirationDate", getExpirationDate());
		attributes.put("neverExpired", getNeverExpired());
		attributes.put("active", getActive());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long entryId = (Long)attributes.get("entryId");

		if (entryId != null) {
			setEntryId(entryId);
		}

		Long departmentId = (Long)attributes.get("departmentId");

		if (departmentId != null) {
			setDepartmentId(departmentId);
		}

		Long categoryId = (Long)attributes.get("categoryId");

		if (categoryId != null) {
			setCategoryId(categoryId);
		}

		Long docTypeId = (Long)attributes.get("docTypeId");

		if (docTypeId != null) {
			setDocTypeId(docTypeId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		String entryName = (String)attributes.get("entryName");

		if (entryName != null) {
			setEntryName(entryName);
		}

		String entryCode = (String)attributes.get("entryCode");

		if (entryCode != null) {
			setEntryCode(entryCode);
		}

		String entryDesc = (String)attributes.get("entryDesc");

		if (entryDesc != null) {
			setEntryDesc(entryDesc);
		}

		String fileAttachmentURL = (String)attributes.get("fileAttachmentURL");

		if (fileAttachmentURL != null) {
			setFileAttachmentURL(fileAttachmentURL);
		}

		String publicatorName = (String)attributes.get("publicatorName");

		if (publicatorName != null) {
			setPublicatorName(publicatorName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Date publishDate = (Date)attributes.get("publishDate");

		if (publishDate != null) {
			setPublishDate(publishDate);
		}

		Date executeDate = (Date)attributes.get("executeDate");

		if (executeDate != null) {
			setExecuteDate(executeDate);
		}

		Date expirationDate = (Date)attributes.get("expirationDate");

		if (expirationDate != null) {
			setExpirationDate(expirationDate);
		}

		Boolean neverExpired = (Boolean)attributes.get("neverExpired");

		if (neverExpired != null) {
			setNeverExpired(neverExpired);
		}

		Boolean active = (Boolean)attributes.get("active");

		if (active != null) {
			setActive(active);
		}
	}

	@JSON
	public long getEntryId() {
		return _entryId;
	}

	public void setEntryId(long entryId) {
		_entryId = entryId;
	}

	@JSON
	public long getDepartmentId() {
		return _departmentId;
	}

	public void setDepartmentId(long departmentId) {
		_columnBitmask |= DEPARTMENTID_COLUMN_BITMASK;

		if (!_setOriginalDepartmentId) {
			_setOriginalDepartmentId = true;

			_originalDepartmentId = _departmentId;
		}

		_departmentId = departmentId;
	}

	public long getOriginalDepartmentId() {
		return _originalDepartmentId;
	}

	@JSON
	public long getCategoryId() {
		return _categoryId;
	}

	public void setCategoryId(long categoryId) {
		_columnBitmask |= CATEGORYID_COLUMN_BITMASK;

		if (!_setOriginalCategoryId) {
			_setOriginalCategoryId = true;

			_originalCategoryId = _categoryId;
		}

		_categoryId = categoryId;
	}

	public long getOriginalCategoryId() {
		return _originalCategoryId;
	}

	@JSON
	public long getDocTypeId() {
		return _docTypeId;
	}

	public void setDocTypeId(long docTypeId) {
		_columnBitmask |= DOCTYPEID_COLUMN_BITMASK;

		if (!_setOriginalDocTypeId) {
			_setOriginalDocTypeId = true;

			_originalDocTypeId = _docTypeId;
		}

		_docTypeId = docTypeId;
	}

	public long getOriginalDocTypeId() {
		return _originalDocTypeId;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	public String getEntryName() {
		if (_entryName == null) {
			return StringPool.BLANK;
		}
		else {
			return _entryName;
		}
	}

	public void setEntryName(String entryName) {
		_entryName = entryName;
	}

	@JSON
	public String getEntryCode() {
		if (_entryCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _entryCode;
		}
	}

	public void setEntryCode(String entryCode) {
		_entryCode = entryCode;
	}

	@JSON
	public String getEntryDesc() {
		if (_entryDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _entryDesc;
		}
	}

	public void setEntryDesc(String entryDesc) {
		_entryDesc = entryDesc;
	}

	@JSON
	public String getFileAttachmentURL() {
		if (_fileAttachmentURL == null) {
			return StringPool.BLANK;
		}
		else {
			return _fileAttachmentURL;
		}
	}

	public void setFileAttachmentURL(String fileAttachmentURL) {
		_fileAttachmentURL = fileAttachmentURL;
	}

	@JSON
	public String getPublicatorName() {
		if (_publicatorName == null) {
			return StringPool.BLANK;
		}
		else {
			return _publicatorName;
		}
	}

	public void setPublicatorName(String publicatorName) {
		_publicatorName = publicatorName;
	}

	@JSON
	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	public Date getPublishDate() {
		return _publishDate;
	}

	public void setPublishDate(Date publishDate) {
		_columnBitmask = -1L;

		_publishDate = publishDate;
	}

	@JSON
	public Date getExecuteDate() {
		return _executeDate;
	}

	public void setExecuteDate(Date executeDate) {
		_executeDate = executeDate;
	}

	@JSON
	public Date getExpirationDate() {
		return _expirationDate;
	}

	public void setExpirationDate(Date expirationDate) {
		_expirationDate = expirationDate;
	}

	@JSON
	public boolean getNeverExpired() {
		return _neverExpired;
	}

	public boolean isNeverExpired() {
		return _neverExpired;
	}

	public void setNeverExpired(boolean neverExpired) {
		_columnBitmask |= NEVEREXPIRED_COLUMN_BITMASK;

		if (!_setOriginalNeverExpired) {
			_setOriginalNeverExpired = true;

			_originalNeverExpired = _neverExpired;
		}

		_neverExpired = neverExpired;
	}

	public boolean getOriginalNeverExpired() {
		return _originalNeverExpired;
	}

	@JSON
	public boolean getActive() {
		return _active;
	}

	public boolean isActive() {
		return _active;
	}

	public void setActive(boolean active) {
		_columnBitmask |= ACTIVE_COLUMN_BITMASK;

		if (!_setOriginalActive) {
			_setOriginalActive = true;

			_originalActive = _active;
		}

		_active = active;
	}

	public boolean getOriginalActive() {
		return _originalActive;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			VBPQ_Entry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public VBPQ_Entry toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (VBPQ_Entry)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		VBPQ_EntryImpl vbpq_EntryImpl = new VBPQ_EntryImpl();

		vbpq_EntryImpl.setEntryId(getEntryId());
		vbpq_EntryImpl.setDepartmentId(getDepartmentId());
		vbpq_EntryImpl.setCategoryId(getCategoryId());
		vbpq_EntryImpl.setDocTypeId(getDocTypeId());
		vbpq_EntryImpl.setCompanyId(getCompanyId());
		vbpq_EntryImpl.setGroupId(getGroupId());
		vbpq_EntryImpl.setUserId(getUserId());
		vbpq_EntryImpl.setUserName(getUserName());
		vbpq_EntryImpl.setEntryName(getEntryName());
		vbpq_EntryImpl.setEntryCode(getEntryCode());
		vbpq_EntryImpl.setEntryDesc(getEntryDesc());
		vbpq_EntryImpl.setFileAttachmentURL(getFileAttachmentURL());
		vbpq_EntryImpl.setPublicatorName(getPublicatorName());
		vbpq_EntryImpl.setCreateDate(getCreateDate());
		vbpq_EntryImpl.setModifiedDate(getModifiedDate());
		vbpq_EntryImpl.setPublishDate(getPublishDate());
		vbpq_EntryImpl.setExecuteDate(getExecuteDate());
		vbpq_EntryImpl.setExpirationDate(getExpirationDate());
		vbpq_EntryImpl.setNeverExpired(getNeverExpired());
		vbpq_EntryImpl.setActive(getActive());

		vbpq_EntryImpl.resetOriginalValues();

		return vbpq_EntryImpl;
	}

	public int compareTo(VBPQ_Entry vbpq_Entry) {
		int value = 0;

		value = DateUtil.compareTo(getPublishDate(), vbpq_Entry.getPublishDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		VBPQ_Entry vbpq_Entry = null;

		try {
			vbpq_Entry = (VBPQ_Entry)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = vbpq_Entry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		VBPQ_EntryModelImpl vbpq_EntryModelImpl = this;

		vbpq_EntryModelImpl._originalDepartmentId = vbpq_EntryModelImpl._departmentId;

		vbpq_EntryModelImpl._setOriginalDepartmentId = false;

		vbpq_EntryModelImpl._originalCategoryId = vbpq_EntryModelImpl._categoryId;

		vbpq_EntryModelImpl._setOriginalCategoryId = false;

		vbpq_EntryModelImpl._originalDocTypeId = vbpq_EntryModelImpl._docTypeId;

		vbpq_EntryModelImpl._setOriginalDocTypeId = false;

		vbpq_EntryModelImpl._originalCompanyId = vbpq_EntryModelImpl._companyId;

		vbpq_EntryModelImpl._setOriginalCompanyId = false;

		vbpq_EntryModelImpl._originalGroupId = vbpq_EntryModelImpl._groupId;

		vbpq_EntryModelImpl._setOriginalGroupId = false;

		vbpq_EntryModelImpl._originalNeverExpired = vbpq_EntryModelImpl._neverExpired;

		vbpq_EntryModelImpl._setOriginalNeverExpired = false;

		vbpq_EntryModelImpl._originalActive = vbpq_EntryModelImpl._active;

		vbpq_EntryModelImpl._setOriginalActive = false;

		vbpq_EntryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VBPQ_Entry> toCacheModel() {
		VBPQ_EntryCacheModel vbpq_EntryCacheModel = new VBPQ_EntryCacheModel();

		vbpq_EntryCacheModel.entryId = getEntryId();

		vbpq_EntryCacheModel.departmentId = getDepartmentId();

		vbpq_EntryCacheModel.categoryId = getCategoryId();

		vbpq_EntryCacheModel.docTypeId = getDocTypeId();

		vbpq_EntryCacheModel.companyId = getCompanyId();

		vbpq_EntryCacheModel.groupId = getGroupId();

		vbpq_EntryCacheModel.userId = getUserId();

		vbpq_EntryCacheModel.userName = getUserName();

		String userName = vbpq_EntryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			vbpq_EntryCacheModel.userName = null;
		}

		vbpq_EntryCacheModel.entryName = getEntryName();

		String entryName = vbpq_EntryCacheModel.entryName;

		if ((entryName != null) && (entryName.length() == 0)) {
			vbpq_EntryCacheModel.entryName = null;
		}

		vbpq_EntryCacheModel.entryCode = getEntryCode();

		String entryCode = vbpq_EntryCacheModel.entryCode;

		if ((entryCode != null) && (entryCode.length() == 0)) {
			vbpq_EntryCacheModel.entryCode = null;
		}

		vbpq_EntryCacheModel.entryDesc = getEntryDesc();

		String entryDesc = vbpq_EntryCacheModel.entryDesc;

		if ((entryDesc != null) && (entryDesc.length() == 0)) {
			vbpq_EntryCacheModel.entryDesc = null;
		}

		vbpq_EntryCacheModel.fileAttachmentURL = getFileAttachmentURL();

		String fileAttachmentURL = vbpq_EntryCacheModel.fileAttachmentURL;

		if ((fileAttachmentURL != null) && (fileAttachmentURL.length() == 0)) {
			vbpq_EntryCacheModel.fileAttachmentURL = null;
		}

		vbpq_EntryCacheModel.publicatorName = getPublicatorName();

		String publicatorName = vbpq_EntryCacheModel.publicatorName;

		if ((publicatorName != null) && (publicatorName.length() == 0)) {
			vbpq_EntryCacheModel.publicatorName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			vbpq_EntryCacheModel.createDate = createDate.getTime();
		}
		else {
			vbpq_EntryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			vbpq_EntryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			vbpq_EntryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		Date publishDate = getPublishDate();

		if (publishDate != null) {
			vbpq_EntryCacheModel.publishDate = publishDate.getTime();
		}
		else {
			vbpq_EntryCacheModel.publishDate = Long.MIN_VALUE;
		}

		Date executeDate = getExecuteDate();

		if (executeDate != null) {
			vbpq_EntryCacheModel.executeDate = executeDate.getTime();
		}
		else {
			vbpq_EntryCacheModel.executeDate = Long.MIN_VALUE;
		}

		Date expirationDate = getExpirationDate();

		if (expirationDate != null) {
			vbpq_EntryCacheModel.expirationDate = expirationDate.getTime();
		}
		else {
			vbpq_EntryCacheModel.expirationDate = Long.MIN_VALUE;
		}

		vbpq_EntryCacheModel.neverExpired = getNeverExpired();

		vbpq_EntryCacheModel.active = getActive();

		return vbpq_EntryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(41);

		sb.append("{entryId=");
		sb.append(getEntryId());
		sb.append(", departmentId=");
		sb.append(getDepartmentId());
		sb.append(", categoryId=");
		sb.append(getCategoryId());
		sb.append(", docTypeId=");
		sb.append(getDocTypeId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", entryName=");
		sb.append(getEntryName());
		sb.append(", entryCode=");
		sb.append(getEntryCode());
		sb.append(", entryDesc=");
		sb.append(getEntryDesc());
		sb.append(", fileAttachmentURL=");
		sb.append(getFileAttachmentURL());
		sb.append(", publicatorName=");
		sb.append(getPublicatorName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", publishDate=");
		sb.append(getPublishDate());
		sb.append(", executeDate=");
		sb.append(getExecuteDate());
		sb.append(", expirationDate=");
		sb.append(getExpirationDate());
		sb.append(", neverExpired=");
		sb.append(getNeverExpired());
		sb.append(", active=");
		sb.append(getActive());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(64);

		sb.append("<model><model-name>");
		sb.append("com.portal_egov.portlet.vbpq.model.VBPQ_Entry");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>entryId</column-name><column-value><![CDATA[");
		sb.append(getEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>departmentId</column-name><column-value><![CDATA[");
		sb.append(getDepartmentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>categoryId</column-name><column-value><![CDATA[");
		sb.append(getCategoryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>docTypeId</column-name><column-value><![CDATA[");
		sb.append(getDocTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entryName</column-name><column-value><![CDATA[");
		sb.append(getEntryName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entryCode</column-name><column-value><![CDATA[");
		sb.append(getEntryCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entryDesc</column-name><column-value><![CDATA[");
		sb.append(getEntryDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileAttachmentURL</column-name><column-value><![CDATA[");
		sb.append(getFileAttachmentURL());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publicatorName</column-name><column-value><![CDATA[");
		sb.append(getPublicatorName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishDate</column-name><column-value><![CDATA[");
		sb.append(getPublishDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>executeDate</column-name><column-value><![CDATA[");
		sb.append(getExecuteDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expirationDate</column-name><column-value><![CDATA[");
		sb.append(getExpirationDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>neverExpired</column-name><column-value><![CDATA[");
		sb.append(getNeverExpired());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>active</column-name><column-value><![CDATA[");
		sb.append(getActive());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = VBPQ_Entry.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			VBPQ_Entry.class
		};
	private long _entryId;
	private long _departmentId;
	private long _originalDepartmentId;
	private boolean _setOriginalDepartmentId;
	private long _categoryId;
	private long _originalCategoryId;
	private boolean _setOriginalCategoryId;
	private long _docTypeId;
	private long _originalDocTypeId;
	private boolean _setOriginalDocTypeId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private String _entryName;
	private String _entryCode;
	private String _entryDesc;
	private String _fileAttachmentURL;
	private String _publicatorName;
	private Date _createDate;
	private Date _modifiedDate;
	private Date _publishDate;
	private Date _executeDate;
	private Date _expirationDate;
	private boolean _neverExpired;
	private boolean _originalNeverExpired;
	private boolean _setOriginalNeverExpired;
	private boolean _active;
	private boolean _originalActive;
	private boolean _setOriginalActive;
	private long _columnBitmask;
	private VBPQ_Entry _escapedModelProxy;
}