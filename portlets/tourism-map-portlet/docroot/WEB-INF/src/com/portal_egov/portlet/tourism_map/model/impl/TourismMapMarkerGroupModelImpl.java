/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.portal_egov.portlet.tourism_map.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.portal_egov.portlet.tourism_map.model.TourismMapMarkerGroup;
import com.portal_egov.portlet.tourism_map.model.TourismMapMarkerGroupModel;
import com.portal_egov.portlet.tourism_map.model.TourismMapMarkerGroupSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the TourismMapMarkerGroup service. Represents a row in the &quot;TourismMapMarkerGroup&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.portal_egov.portlet.tourism_map.model.TourismMapMarkerGroupModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TourismMapMarkerGroupImpl}.
 * </p>
 *
 * @author HungDX
 * @see TourismMapMarkerGroupImpl
 * @see com.portal_egov.portlet.tourism_map.model.TourismMapMarkerGroup
 * @see com.portal_egov.portlet.tourism_map.model.TourismMapMarkerGroupModel
 * @generated
 */
@JSON(strict = true)
public class TourismMapMarkerGroupModelImpl extends BaseModelImpl<TourismMapMarkerGroup>
	implements TourismMapMarkerGroupModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tourism map marker group model instance should use the {@link com.portal_egov.portlet.tourism_map.model.TourismMapMarkerGroup} interface instead.
	 */
	public static final String TABLE_NAME = "TourismMapMarkerGroup";
	public static final Object[][] TABLE_COLUMNS = {
			{ "markerGroupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "markerGroupName", Types.VARCHAR },
			{ "markerGroupInfo", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table TourismMapMarkerGroup (markerGroupId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,markerGroupName VARCHAR(300) null,markerGroupInfo VARCHAR(1000) null)";
	public static final String TABLE_SQL_DROP = "drop table TourismMapMarkerGroup";
	public static final String ORDER_BY_JPQL = " ORDER BY tourismMapMarkerGroup.markerGroupName ASC";
	public static final String ORDER_BY_SQL = " ORDER BY TourismMapMarkerGroup.markerGroupName ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.portal_egov.portlet.tourism_map.model.TourismMapMarkerGroup"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.portal_egov.portlet.tourism_map.model.TourismMapMarkerGroup"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.portal_egov.portlet.tourism_map.model.TourismMapMarkerGroup"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static TourismMapMarkerGroup toModel(
		TourismMapMarkerGroupSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		TourismMapMarkerGroup model = new TourismMapMarkerGroupImpl();

		model.setMarkerGroupId(soapModel.getMarkerGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setMarkerGroupName(soapModel.getMarkerGroupName());
		model.setMarkerGroupInfo(soapModel.getMarkerGroupInfo());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<TourismMapMarkerGroup> toModels(
		TourismMapMarkerGroupSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<TourismMapMarkerGroup> models = new ArrayList<TourismMapMarkerGroup>(soapModels.length);

		for (TourismMapMarkerGroupSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.portal_egov.portlet.tourism_map.model.TourismMapMarkerGroup"));

	public TourismMapMarkerGroupModelImpl() {
	}

	public long getPrimaryKey() {
		return _markerGroupId;
	}

	public void setPrimaryKey(long primaryKey) {
		setMarkerGroupId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_markerGroupId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return TourismMapMarkerGroup.class;
	}

	public String getModelClassName() {
		return TourismMapMarkerGroup.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("markerGroupId", getMarkerGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("markerGroupName", getMarkerGroupName());
		attributes.put("markerGroupInfo", getMarkerGroupInfo());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long markerGroupId = (Long)attributes.get("markerGroupId");

		if (markerGroupId != null) {
			setMarkerGroupId(markerGroupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String markerGroupName = (String)attributes.get("markerGroupName");

		if (markerGroupName != null) {
			setMarkerGroupName(markerGroupName);
		}

		String markerGroupInfo = (String)attributes.get("markerGroupInfo");

		if (markerGroupInfo != null) {
			setMarkerGroupInfo(markerGroupInfo);
		}
	}

	@JSON
	public long getMarkerGroupId() {
		return _markerGroupId;
	}

	public void setMarkerGroupId(long markerGroupId) {
		_markerGroupId = markerGroupId;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	public String getMarkerGroupName() {
		if (_markerGroupName == null) {
			return StringPool.BLANK;
		}
		else {
			return _markerGroupName;
		}
	}

	public void setMarkerGroupName(String markerGroupName) {
		_columnBitmask = -1L;

		_markerGroupName = markerGroupName;
	}

	@JSON
	public String getMarkerGroupInfo() {
		if (_markerGroupInfo == null) {
			return StringPool.BLANK;
		}
		else {
			return _markerGroupInfo;
		}
	}

	public void setMarkerGroupInfo(String markerGroupInfo) {
		_markerGroupInfo = markerGroupInfo;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			TourismMapMarkerGroup.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TourismMapMarkerGroup toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (TourismMapMarkerGroup)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		TourismMapMarkerGroupImpl tourismMapMarkerGroupImpl = new TourismMapMarkerGroupImpl();

		tourismMapMarkerGroupImpl.setMarkerGroupId(getMarkerGroupId());
		tourismMapMarkerGroupImpl.setCompanyId(getCompanyId());
		tourismMapMarkerGroupImpl.setGroupId(getGroupId());
		tourismMapMarkerGroupImpl.setUserId(getUserId());
		tourismMapMarkerGroupImpl.setUserName(getUserName());
		tourismMapMarkerGroupImpl.setCreateDate(getCreateDate());
		tourismMapMarkerGroupImpl.setModifiedDate(getModifiedDate());
		tourismMapMarkerGroupImpl.setMarkerGroupName(getMarkerGroupName());
		tourismMapMarkerGroupImpl.setMarkerGroupInfo(getMarkerGroupInfo());

		tourismMapMarkerGroupImpl.resetOriginalValues();

		return tourismMapMarkerGroupImpl;
	}

	public int compareTo(TourismMapMarkerGroup tourismMapMarkerGroup) {
		int value = 0;

		value = getMarkerGroupName()
					.compareTo(tourismMapMarkerGroup.getMarkerGroupName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		TourismMapMarkerGroup tourismMapMarkerGroup = null;

		try {
			tourismMapMarkerGroup = (TourismMapMarkerGroup)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = tourismMapMarkerGroup.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		TourismMapMarkerGroupModelImpl tourismMapMarkerGroupModelImpl = this;

		tourismMapMarkerGroupModelImpl._originalCompanyId = tourismMapMarkerGroupModelImpl._companyId;

		tourismMapMarkerGroupModelImpl._setOriginalCompanyId = false;

		tourismMapMarkerGroupModelImpl._originalGroupId = tourismMapMarkerGroupModelImpl._groupId;

		tourismMapMarkerGroupModelImpl._setOriginalGroupId = false;

		tourismMapMarkerGroupModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<TourismMapMarkerGroup> toCacheModel() {
		TourismMapMarkerGroupCacheModel tourismMapMarkerGroupCacheModel = new TourismMapMarkerGroupCacheModel();

		tourismMapMarkerGroupCacheModel.markerGroupId = getMarkerGroupId();

		tourismMapMarkerGroupCacheModel.companyId = getCompanyId();

		tourismMapMarkerGroupCacheModel.groupId = getGroupId();

		tourismMapMarkerGroupCacheModel.userId = getUserId();

		tourismMapMarkerGroupCacheModel.userName = getUserName();

		String userName = tourismMapMarkerGroupCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			tourismMapMarkerGroupCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			tourismMapMarkerGroupCacheModel.createDate = createDate.getTime();
		}
		else {
			tourismMapMarkerGroupCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			tourismMapMarkerGroupCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			tourismMapMarkerGroupCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		tourismMapMarkerGroupCacheModel.markerGroupName = getMarkerGroupName();

		String markerGroupName = tourismMapMarkerGroupCacheModel.markerGroupName;

		if ((markerGroupName != null) && (markerGroupName.length() == 0)) {
			tourismMapMarkerGroupCacheModel.markerGroupName = null;
		}

		tourismMapMarkerGroupCacheModel.markerGroupInfo = getMarkerGroupInfo();

		String markerGroupInfo = tourismMapMarkerGroupCacheModel.markerGroupInfo;

		if ((markerGroupInfo != null) && (markerGroupInfo.length() == 0)) {
			tourismMapMarkerGroupCacheModel.markerGroupInfo = null;
		}

		return tourismMapMarkerGroupCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{markerGroupId=");
		sb.append(getMarkerGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", markerGroupName=");
		sb.append(getMarkerGroupName());
		sb.append(", markerGroupInfo=");
		sb.append(getMarkerGroupInfo());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append(
			"com.portal_egov.portlet.tourism_map.model.TourismMapMarkerGroup");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>markerGroupId</column-name><column-value><![CDATA[");
		sb.append(getMarkerGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>markerGroupName</column-name><column-value><![CDATA[");
		sb.append(getMarkerGroupName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>markerGroupInfo</column-name><column-value><![CDATA[");
		sb.append(getMarkerGroupInfo());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = TourismMapMarkerGroup.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			TourismMapMarkerGroup.class
		};
	private long _markerGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _markerGroupName;
	private String _markerGroupInfo;
	private long _columnBitmask;
	private TourismMapMarkerGroup _escapedModelProxy;
}