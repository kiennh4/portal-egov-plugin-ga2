/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.portal_egov.portlet.visit_counter.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.portal_egov.portlet.visit_counter.model.VisitCounterDayLog;
import com.portal_egov.portlet.visit_counter.model.VisitCounterDayLogModel;
import com.portal_egov.portlet.visit_counter.model.VisitCounterDayLogSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the VisitCounterDayLog service. Represents a row in the &quot;VisitCounterDayLog&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.portal_egov.portlet.visit_counter.model.VisitCounterDayLogModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VisitCounterDayLogImpl}.
 * </p>
 *
 * @author HungDX
 * @see VisitCounterDayLogImpl
 * @see com.portal_egov.portlet.visit_counter.model.VisitCounterDayLog
 * @see com.portal_egov.portlet.visit_counter.model.VisitCounterDayLogModel
 * @generated
 */
@JSON(strict = true)
public class VisitCounterDayLogModelImpl extends BaseModelImpl<VisitCounterDayLog>
	implements VisitCounterDayLogModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a visit counter day log model instance should use the {@link com.portal_egov.portlet.visit_counter.model.VisitCounterDayLog} interface instead.
	 */
	public static final String TABLE_NAME = "VisitCounterDayLog";
	public static final Object[][] TABLE_COLUMNS = {
			{ "daylogId", Types.VARCHAR },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "hitCounter", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table VisitCounterDayLog (daylogId VARCHAR(75) not null primary key,companyId LONG,groupId LONG,hitCounter INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table VisitCounterDayLog";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.portal_egov.portlet.visit_counter.model.VisitCounterDayLog"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.portal_egov.portlet.visit_counter.model.VisitCounterDayLog"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.portal_egov.portlet.visit_counter.model.VisitCounterDayLog"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static VisitCounterDayLog toModel(VisitCounterDayLogSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		VisitCounterDayLog model = new VisitCounterDayLogImpl();

		model.setDaylogId(soapModel.getDaylogId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setHitCounter(soapModel.getHitCounter());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<VisitCounterDayLog> toModels(
		VisitCounterDayLogSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<VisitCounterDayLog> models = new ArrayList<VisitCounterDayLog>(soapModels.length);

		for (VisitCounterDayLogSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.portal_egov.portlet.visit_counter.model.VisitCounterDayLog"));

	public VisitCounterDayLogModelImpl() {
	}

	public String getPrimaryKey() {
		return _daylogId;
	}

	public void setPrimaryKey(String primaryKey) {
		setDaylogId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return _daylogId;
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	public Class<?> getModelClass() {
		return VisitCounterDayLog.class;
	}

	public String getModelClassName() {
		return VisitCounterDayLog.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("daylogId", getDaylogId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("hitCounter", getHitCounter());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String daylogId = (String)attributes.get("daylogId");

		if (daylogId != null) {
			setDaylogId(daylogId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Integer hitCounter = (Integer)attributes.get("hitCounter");

		if (hitCounter != null) {
			setHitCounter(hitCounter);
		}
	}

	@JSON
	public String getDaylogId() {
		if (_daylogId == null) {
			return StringPool.BLANK;
		}
		else {
			return _daylogId;
		}
	}

	public void setDaylogId(String daylogId) {
		_daylogId = daylogId;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	public int getHitCounter() {
		return _hitCounter;
	}

	public void setHitCounter(int hitCounter) {
		_hitCounter = hitCounter;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public VisitCounterDayLog toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (VisitCounterDayLog)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		VisitCounterDayLogImpl visitCounterDayLogImpl = new VisitCounterDayLogImpl();

		visitCounterDayLogImpl.setDaylogId(getDaylogId());
		visitCounterDayLogImpl.setCompanyId(getCompanyId());
		visitCounterDayLogImpl.setGroupId(getGroupId());
		visitCounterDayLogImpl.setHitCounter(getHitCounter());

		visitCounterDayLogImpl.resetOriginalValues();

		return visitCounterDayLogImpl;
	}

	public int compareTo(VisitCounterDayLog visitCounterDayLog) {
		String primaryKey = visitCounterDayLog.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		VisitCounterDayLog visitCounterDayLog = null;

		try {
			visitCounterDayLog = (VisitCounterDayLog)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		String primaryKey = visitCounterDayLog.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		VisitCounterDayLogModelImpl visitCounterDayLogModelImpl = this;

		visitCounterDayLogModelImpl._originalCompanyId = visitCounterDayLogModelImpl._companyId;

		visitCounterDayLogModelImpl._setOriginalCompanyId = false;

		visitCounterDayLogModelImpl._originalGroupId = visitCounterDayLogModelImpl._groupId;

		visitCounterDayLogModelImpl._setOriginalGroupId = false;

		visitCounterDayLogModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VisitCounterDayLog> toCacheModel() {
		VisitCounterDayLogCacheModel visitCounterDayLogCacheModel = new VisitCounterDayLogCacheModel();

		visitCounterDayLogCacheModel.daylogId = getDaylogId();

		String daylogId = visitCounterDayLogCacheModel.daylogId;

		if ((daylogId != null) && (daylogId.length() == 0)) {
			visitCounterDayLogCacheModel.daylogId = null;
		}

		visitCounterDayLogCacheModel.companyId = getCompanyId();

		visitCounterDayLogCacheModel.groupId = getGroupId();

		visitCounterDayLogCacheModel.hitCounter = getHitCounter();

		return visitCounterDayLogCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{daylogId=");
		sb.append(getDaylogId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", hitCounter=");
		sb.append(getHitCounter());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append(
			"com.portal_egov.portlet.visit_counter.model.VisitCounterDayLog");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>daylogId</column-name><column-value><![CDATA[");
		sb.append(getDaylogId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hitCounter</column-name><column-value><![CDATA[");
		sb.append(getHitCounter());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = VisitCounterDayLog.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			VisitCounterDayLog.class
		};
	private String _daylogId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private int _hitCounter;
	private long _columnBitmask;
	private VisitCounterDayLog _escapedModelProxy;
}