/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.bkav.portal.portlet.autoupdate.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the UpdatePlugins service. Represents a row in the &quot;AutoUpdate_UpdatePlugins&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.bkav.portal.portlet.autoupdate.model.impl.UpdatePluginsModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.bkav.portal.portlet.autoupdate.model.impl.UpdatePluginsImpl}.
 * </p>
 *
 * @author anhbdb
 * @see UpdatePlugins
 * @see com.bkav.portal.portlet.autoupdate.model.impl.UpdatePluginsImpl
 * @see com.bkav.portal.portlet.autoupdate.model.impl.UpdatePluginsModelImpl
 * @generated
 */
public interface UpdatePluginsModel extends BaseModel<UpdatePlugins> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a update plugins model instance should use the {@link UpdatePlugins} interface instead.
	 */

	/**
	 * Returns the primary key of this update plugins.
	 *
	 * @return the primary key of this update plugins
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this update plugins.
	 *
	 * @param primaryKey the primary key of this update plugins
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the plugin ID of this update plugins.
	 *
	 * @return the plugin ID of this update plugins
	 */
	public long getPluginId();

	/**
	 * Sets the plugin ID of this update plugins.
	 *
	 * @param pluginId the plugin ID of this update plugins
	 */
	public void setPluginId(long pluginId);

	/**
	 * Returns the plugin name of this update plugins.
	 *
	 * @return the plugin name of this update plugins
	 */
	@AutoEscape
	public String getPluginName();

	/**
	 * Sets the plugin name of this update plugins.
	 *
	 * @param pluginName the plugin name of this update plugins
	 */
	public void setPluginName(String pluginName);

	/**
	 * Returns the plugin code of this update plugins.
	 *
	 * @return the plugin code of this update plugins
	 */
	@AutoEscape
	public String getPluginCode();

	/**
	 * Sets the plugin code of this update plugins.
	 *
	 * @param pluginCode the plugin code of this update plugins
	 */
	public void setPluginCode(String pluginCode);

	/**
	 * Returns the plugin type of this update plugins.
	 *
	 * @return the plugin type of this update plugins
	 */
	public int getPluginType();

	/**
	 * Sets the plugin type of this update plugins.
	 *
	 * @param pluginType the plugin type of this update plugins
	 */
	public void setPluginType(int pluginType);

	/**
	 * Returns the current version of this update plugins.
	 *
	 * @return the current version of this update plugins
	 */
	public double getCurrentVersion();

	/**
	 * Sets the current version of this update plugins.
	 *
	 * @param currentVersion the current version of this update plugins
	 */
	public void setCurrentVersion(double currentVersion);

	/**
	 * Returns the previous versions of this update plugins.
	 *
	 * @return the previous versions of this update plugins
	 */
	@AutoEscape
	public String getPreviousVersions();

	/**
	 * Sets the previous versions of this update plugins.
	 *
	 * @param previousVersions the previous versions of this update plugins
	 */
	public void setPreviousVersions(String previousVersions);

	/**
	 * Returns the current size of this update plugins.
	 *
	 * @return the current size of this update plugins
	 */
	public double getCurrentSize();

	/**
	 * Sets the current size of this update plugins.
	 *
	 * @param currentSize the current size of this update plugins
	 */
	public void setCurrentSize(double currentSize);

	/**
	 * Returns the create date of this update plugins.
	 *
	 * @return the create date of this update plugins
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this update plugins.
	 *
	 * @param createDate the create date of this update plugins
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modify date of this update plugins.
	 *
	 * @return the modify date of this update plugins
	 */
	public Date getModifyDate();

	/**
	 * Sets the modify date of this update plugins.
	 *
	 * @param modifyDate the modify date of this update plugins
	 */
	public void setModifyDate(Date modifyDate);

	/**
	 * Returns the server company ID of this update plugins.
	 *
	 * @return the server company ID of this update plugins
	 */
	public long getServerCompanyId();

	/**
	 * Sets the server company ID of this update plugins.
	 *
	 * @param serverCompanyId the server company ID of this update plugins
	 */
	public void setServerCompanyId(long serverCompanyId);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(UpdatePlugins updatePlugins);

	public int hashCode();

	public CacheModel<UpdatePlugins> toCacheModel();

	public UpdatePlugins toEscapedModel();

	public String toString();

	public String toXmlString();
}