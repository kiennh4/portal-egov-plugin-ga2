/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.portal_egov.portlet.inquiry.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.portal_egov.portlet.inquiry.model.OnlineInquiry;
import com.portal_egov.portlet.inquiry.model.OnlineInquiryModel;
import com.portal_egov.portlet.inquiry.model.OnlineInquirySoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the OnlineInquiry service. Represents a row in the &quot;OnlineInquiry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.portal_egov.portlet.inquiry.model.OnlineInquiryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OnlineInquiryImpl}.
 * </p>
 *
 * @author HungDX
 * @see OnlineInquiryImpl
 * @see com.portal_egov.portlet.inquiry.model.OnlineInquiry
 * @see com.portal_egov.portlet.inquiry.model.OnlineInquiryModel
 * @generated
 */
@JSON(strict = true)
public class OnlineInquiryModelImpl extends BaseModelImpl<OnlineInquiry>
	implements OnlineInquiryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a online inquiry model instance should use the {@link com.portal_egov.portlet.inquiry.model.OnlineInquiry} interface instead.
	 */
	public static final String TABLE_NAME = "OnlineInquiry";
	public static final Object[][] TABLE_COLUMNS = {
			{ "inquiryId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "fullName", Types.VARCHAR },
			{ "phoneNumbers", Types.VARCHAR },
			{ "emailAddress", Types.VARCHAR },
			{ "inquiryContent", Types.VARCHAR },
			{ "inquiryStatus", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table OnlineInquiry (inquiryId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,fullName VARCHAR(75) null,phoneNumbers VARCHAR(75) null,emailAddress VARCHAR(75) null,inquiryContent VARCHAR(75) null,inquiryStatus INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table OnlineInquiry";
	public static final String ORDER_BY_JPQL = " ORDER BY onlineInquiry.createDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY OnlineInquiry.createDate ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.portal_egov.portlet.inquiry.model.OnlineInquiry"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.portal_egov.portlet.inquiry.model.OnlineInquiry"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.portal_egov.portlet.inquiry.model.OnlineInquiry"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static OnlineInquiry toModel(OnlineInquirySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		OnlineInquiry model = new OnlineInquiryImpl();

		model.setInquiryId(soapModel.getInquiryId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setFullName(soapModel.getFullName());
		model.setPhoneNumbers(soapModel.getPhoneNumbers());
		model.setEmailAddress(soapModel.getEmailAddress());
		model.setInquiryContent(soapModel.getInquiryContent());
		model.setInquiryStatus(soapModel.getInquiryStatus());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<OnlineInquiry> toModels(OnlineInquirySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<OnlineInquiry> models = new ArrayList<OnlineInquiry>(soapModels.length);

		for (OnlineInquirySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.portal_egov.portlet.inquiry.model.OnlineInquiry"));

	public OnlineInquiryModelImpl() {
	}

	public long getPrimaryKey() {
		return _inquiryId;
	}

	public void setPrimaryKey(long primaryKey) {
		setInquiryId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_inquiryId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return OnlineInquiry.class;
	}

	public String getModelClassName() {
		return OnlineInquiry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("inquiryId", getInquiryId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("fullName", getFullName());
		attributes.put("phoneNumbers", getPhoneNumbers());
		attributes.put("emailAddress", getEmailAddress());
		attributes.put("inquiryContent", getInquiryContent());
		attributes.put("inquiryStatus", getInquiryStatus());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long inquiryId = (Long)attributes.get("inquiryId");

		if (inquiryId != null) {
			setInquiryId(inquiryId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String fullName = (String)attributes.get("fullName");

		if (fullName != null) {
			setFullName(fullName);
		}

		String phoneNumbers = (String)attributes.get("phoneNumbers");

		if (phoneNumbers != null) {
			setPhoneNumbers(phoneNumbers);
		}

		String emailAddress = (String)attributes.get("emailAddress");

		if (emailAddress != null) {
			setEmailAddress(emailAddress);
		}

		String inquiryContent = (String)attributes.get("inquiryContent");

		if (inquiryContent != null) {
			setInquiryContent(inquiryContent);
		}

		Integer inquiryStatus = (Integer)attributes.get("inquiryStatus");

		if (inquiryStatus != null) {
			setInquiryStatus(inquiryStatus);
		}
	}

	@JSON
	public long getInquiryId() {
		return _inquiryId;
	}

	public void setInquiryId(long inquiryId) {
		_inquiryId = inquiryId;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	public String getFullName() {
		if (_fullName == null) {
			return StringPool.BLANK;
		}
		else {
			return _fullName;
		}
	}

	public void setFullName(String fullName) {
		_fullName = fullName;
	}

	@JSON
	public String getPhoneNumbers() {
		if (_phoneNumbers == null) {
			return StringPool.BLANK;
		}
		else {
			return _phoneNumbers;
		}
	}

	public void setPhoneNumbers(String phoneNumbers) {
		_phoneNumbers = phoneNumbers;
	}

	@JSON
	public String getEmailAddress() {
		if (_emailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailAddress;
		}
	}

	public void setEmailAddress(String emailAddress) {
		_emailAddress = emailAddress;
	}

	@JSON
	public String getInquiryContent() {
		if (_inquiryContent == null) {
			return StringPool.BLANK;
		}
		else {
			return _inquiryContent;
		}
	}

	public void setInquiryContent(String inquiryContent) {
		_inquiryContent = inquiryContent;
	}

	@JSON
	public int getInquiryStatus() {
		return _inquiryStatus;
	}

	public void setInquiryStatus(int inquiryStatus) {
		_inquiryStatus = inquiryStatus;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			OnlineInquiry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public OnlineInquiry toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (OnlineInquiry)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		OnlineInquiryImpl onlineInquiryImpl = new OnlineInquiryImpl();

		onlineInquiryImpl.setInquiryId(getInquiryId());
		onlineInquiryImpl.setGroupId(getGroupId());
		onlineInquiryImpl.setCompanyId(getCompanyId());
		onlineInquiryImpl.setUserId(getUserId());
		onlineInquiryImpl.setUserName(getUserName());
		onlineInquiryImpl.setCreateDate(getCreateDate());
		onlineInquiryImpl.setModifiedDate(getModifiedDate());
		onlineInquiryImpl.setFullName(getFullName());
		onlineInquiryImpl.setPhoneNumbers(getPhoneNumbers());
		onlineInquiryImpl.setEmailAddress(getEmailAddress());
		onlineInquiryImpl.setInquiryContent(getInquiryContent());
		onlineInquiryImpl.setInquiryStatus(getInquiryStatus());

		onlineInquiryImpl.resetOriginalValues();

		return onlineInquiryImpl;
	}

	public int compareTo(OnlineInquiry onlineInquiry) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(),
				onlineInquiry.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		OnlineInquiry onlineInquiry = null;

		try {
			onlineInquiry = (OnlineInquiry)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = onlineInquiry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		OnlineInquiryModelImpl onlineInquiryModelImpl = this;

		onlineInquiryModelImpl._originalGroupId = onlineInquiryModelImpl._groupId;

		onlineInquiryModelImpl._setOriginalGroupId = false;

		onlineInquiryModelImpl._originalCompanyId = onlineInquiryModelImpl._companyId;

		onlineInquiryModelImpl._setOriginalCompanyId = false;

		onlineInquiryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<OnlineInquiry> toCacheModel() {
		OnlineInquiryCacheModel onlineInquiryCacheModel = new OnlineInquiryCacheModel();

		onlineInquiryCacheModel.inquiryId = getInquiryId();

		onlineInquiryCacheModel.groupId = getGroupId();

		onlineInquiryCacheModel.companyId = getCompanyId();

		onlineInquiryCacheModel.userId = getUserId();

		onlineInquiryCacheModel.userName = getUserName();

		String userName = onlineInquiryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			onlineInquiryCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			onlineInquiryCacheModel.createDate = createDate.getTime();
		}
		else {
			onlineInquiryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			onlineInquiryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			onlineInquiryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		onlineInquiryCacheModel.fullName = getFullName();

		String fullName = onlineInquiryCacheModel.fullName;

		if ((fullName != null) && (fullName.length() == 0)) {
			onlineInquiryCacheModel.fullName = null;
		}

		onlineInquiryCacheModel.phoneNumbers = getPhoneNumbers();

		String phoneNumbers = onlineInquiryCacheModel.phoneNumbers;

		if ((phoneNumbers != null) && (phoneNumbers.length() == 0)) {
			onlineInquiryCacheModel.phoneNumbers = null;
		}

		onlineInquiryCacheModel.emailAddress = getEmailAddress();

		String emailAddress = onlineInquiryCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			onlineInquiryCacheModel.emailAddress = null;
		}

		onlineInquiryCacheModel.inquiryContent = getInquiryContent();

		String inquiryContent = onlineInquiryCacheModel.inquiryContent;

		if ((inquiryContent != null) && (inquiryContent.length() == 0)) {
			onlineInquiryCacheModel.inquiryContent = null;
		}

		onlineInquiryCacheModel.inquiryStatus = getInquiryStatus();

		return onlineInquiryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{inquiryId=");
		sb.append(getInquiryId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", fullName=");
		sb.append(getFullName());
		sb.append(", phoneNumbers=");
		sb.append(getPhoneNumbers());
		sb.append(", emailAddress=");
		sb.append(getEmailAddress());
		sb.append(", inquiryContent=");
		sb.append(getInquiryContent());
		sb.append(", inquiryStatus=");
		sb.append(getInquiryStatus());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.portal_egov.portlet.inquiry.model.OnlineInquiry");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>inquiryId</column-name><column-value><![CDATA[");
		sb.append(getInquiryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fullName</column-name><column-value><![CDATA[");
		sb.append(getFullName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phoneNumbers</column-name><column-value><![CDATA[");
		sb.append(getPhoneNumbers());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailAddress</column-name><column-value><![CDATA[");
		sb.append(getEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inquiryContent</column-name><column-value><![CDATA[");
		sb.append(getInquiryContent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inquiryStatus</column-name><column-value><![CDATA[");
		sb.append(getInquiryStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = OnlineInquiry.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			OnlineInquiry.class
		};
	private long _inquiryId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _fullName;
	private String _phoneNumbers;
	private String _emailAddress;
	private String _inquiryContent;
	private int _inquiryStatus;
	private long _columnBitmask;
	private OnlineInquiry _escapedModelProxy;
}