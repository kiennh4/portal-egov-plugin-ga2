/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.portal_egov.portlet.tthc.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.portal_egov.portlet.tthc.model.TTHC_Entry;
import com.portal_egov.portlet.tthc.model.TTHC_EntryModel;
import com.portal_egov.portlet.tthc.model.TTHC_EntrySoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the TTHC_Entry service. Represents a row in the &quot;tthc_entry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.portal_egov.portlet.tthc.model.TTHC_EntryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TTHC_EntryImpl}.
 * </p>
 *
 * @author HungDX
 * @see TTHC_EntryImpl
 * @see com.portal_egov.portlet.tthc.model.TTHC_Entry
 * @see com.portal_egov.portlet.tthc.model.TTHC_EntryModel
 * @generated
 */
@JSON(strict = true)
public class TTHC_EntryModelImpl extends BaseModelImpl<TTHC_Entry>
	implements TTHC_EntryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a t t h c_ entry model instance should use the {@link com.portal_egov.portlet.tthc.model.TTHC_Entry} interface instead.
	 */
	public static final String TABLE_NAME = "tthc_entry";
	public static final Object[][] TABLE_COLUMNS = {
			{ "entryId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "levelId", Types.BIGINT },
			{ "departmentId", Types.BIGINT },
			{ "categoryId", Types.BIGINT },
			{ "audienceId", Types.BIGINT },
			{ "resultTypeId", Types.BIGINT },
			{ "entryCode", Types.VARCHAR },
			{ "entryName", Types.VARCHAR },
			{ "entryDesc", Types.VARCHAR },
			{ "processGuide", Types.VARCHAR },
			{ "processType", Types.VARCHAR },
			{ "processTime", Types.VARCHAR },
			{ "processFee", Types.VARCHAR },
			{ "processRequirement", Types.VARCHAR },
			{ "processFoundationDocument", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table tthc_entry (entryId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(75) null,levelId LONG,departmentId LONG,categoryId LONG,audienceId LONG,resultTypeId LONG,entryCode VARCHAR(300) null,entryName VARCHAR(3000) null,entryDesc STRING null,processGuide STRING null,processType STRING null,processTime STRING null,processFee STRING null,processRequirement STRING null,processFoundationDocument VARCHAR(75) null,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table tthc_entry";
	public static final String ORDER_BY_JPQL = " ORDER BY tthc_Entry.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY tthc_entry.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.portal_egov.portlet.tthc.model.TTHC_Entry"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.portal_egov.portlet.tthc.model.TTHC_Entry"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.portal_egov.portlet.tthc.model.TTHC_Entry"),
			true);
	public static long AUDIENCEID_COLUMN_BITMASK = 1L;
	public static long CATEGORYID_COLUMN_BITMASK = 2L;
	public static long COMPANYID_COLUMN_BITMASK = 4L;
	public static long DEPARTMENTID_COLUMN_BITMASK = 8L;
	public static long GROUPID_COLUMN_BITMASK = 16L;
	public static long LEVELID_COLUMN_BITMASK = 32L;
	public static long RESULTTYPEID_COLUMN_BITMASK = 64L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static TTHC_Entry toModel(TTHC_EntrySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		TTHC_Entry model = new TTHC_EntryImpl();

		model.setEntryId(soapModel.getEntryId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setLevelId(soapModel.getLevelId());
		model.setDepartmentId(soapModel.getDepartmentId());
		model.setCategoryId(soapModel.getCategoryId());
		model.setAudienceId(soapModel.getAudienceId());
		model.setResultTypeId(soapModel.getResultTypeId());
		model.setEntryCode(soapModel.getEntryCode());
		model.setEntryName(soapModel.getEntryName());
		model.setEntryDesc(soapModel.getEntryDesc());
		model.setProcessGuide(soapModel.getProcessGuide());
		model.setProcessType(soapModel.getProcessType());
		model.setProcessTime(soapModel.getProcessTime());
		model.setProcessFee(soapModel.getProcessFee());
		model.setProcessRequirement(soapModel.getProcessRequirement());
		model.setProcessFoundationDocument(soapModel.getProcessFoundationDocument());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<TTHC_Entry> toModels(TTHC_EntrySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<TTHC_Entry> models = new ArrayList<TTHC_Entry>(soapModels.length);

		for (TTHC_EntrySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.portal_egov.portlet.tthc.model.TTHC_Entry"));

	public TTHC_EntryModelImpl() {
	}

	public long getPrimaryKey() {
		return _entryId;
	}

	public void setPrimaryKey(long primaryKey) {
		setEntryId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_entryId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return TTHC_Entry.class;
	}

	public String getModelClassName() {
		return TTHC_Entry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("entryId", getEntryId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("levelId", getLevelId());
		attributes.put("departmentId", getDepartmentId());
		attributes.put("categoryId", getCategoryId());
		attributes.put("audienceId", getAudienceId());
		attributes.put("resultTypeId", getResultTypeId());
		attributes.put("entryCode", getEntryCode());
		attributes.put("entryName", getEntryName());
		attributes.put("entryDesc", getEntryDesc());
		attributes.put("processGuide", getProcessGuide());
		attributes.put("processType", getProcessType());
		attributes.put("processTime", getProcessTime());
		attributes.put("processFee", getProcessFee());
		attributes.put("processRequirement", getProcessRequirement());
		attributes.put("processFoundationDocument",
			getProcessFoundationDocument());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long entryId = (Long)attributes.get("entryId");

		if (entryId != null) {
			setEntryId(entryId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Long levelId = (Long)attributes.get("levelId");

		if (levelId != null) {
			setLevelId(levelId);
		}

		Long departmentId = (Long)attributes.get("departmentId");

		if (departmentId != null) {
			setDepartmentId(departmentId);
		}

		Long categoryId = (Long)attributes.get("categoryId");

		if (categoryId != null) {
			setCategoryId(categoryId);
		}

		Long audienceId = (Long)attributes.get("audienceId");

		if (audienceId != null) {
			setAudienceId(audienceId);
		}

		Long resultTypeId = (Long)attributes.get("resultTypeId");

		if (resultTypeId != null) {
			setResultTypeId(resultTypeId);
		}

		String entryCode = (String)attributes.get("entryCode");

		if (entryCode != null) {
			setEntryCode(entryCode);
		}

		String entryName = (String)attributes.get("entryName");

		if (entryName != null) {
			setEntryName(entryName);
		}

		String entryDesc = (String)attributes.get("entryDesc");

		if (entryDesc != null) {
			setEntryDesc(entryDesc);
		}

		String processGuide = (String)attributes.get("processGuide");

		if (processGuide != null) {
			setProcessGuide(processGuide);
		}

		String processType = (String)attributes.get("processType");

		if (processType != null) {
			setProcessType(processType);
		}

		String processTime = (String)attributes.get("processTime");

		if (processTime != null) {
			setProcessTime(processTime);
		}

		String processFee = (String)attributes.get("processFee");

		if (processFee != null) {
			setProcessFee(processFee);
		}

		String processRequirement = (String)attributes.get("processRequirement");

		if (processRequirement != null) {
			setProcessRequirement(processRequirement);
		}

		String processFoundationDocument = (String)attributes.get(
				"processFoundationDocument");

		if (processFoundationDocument != null) {
			setProcessFoundationDocument(processFoundationDocument);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	public long getEntryId() {
		return _entryId;
	}

	public void setEntryId(long entryId) {
		_entryId = entryId;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	public long getLevelId() {
		return _levelId;
	}

	public void setLevelId(long levelId) {
		_columnBitmask |= LEVELID_COLUMN_BITMASK;

		if (!_setOriginalLevelId) {
			_setOriginalLevelId = true;

			_originalLevelId = _levelId;
		}

		_levelId = levelId;
	}

	public long getOriginalLevelId() {
		return _originalLevelId;
	}

	@JSON
	public long getDepartmentId() {
		return _departmentId;
	}

	public void setDepartmentId(long departmentId) {
		_columnBitmask |= DEPARTMENTID_COLUMN_BITMASK;

		if (!_setOriginalDepartmentId) {
			_setOriginalDepartmentId = true;

			_originalDepartmentId = _departmentId;
		}

		_departmentId = departmentId;
	}

	public long getOriginalDepartmentId() {
		return _originalDepartmentId;
	}

	@JSON
	public long getCategoryId() {
		return _categoryId;
	}

	public void setCategoryId(long categoryId) {
		_columnBitmask |= CATEGORYID_COLUMN_BITMASK;

		if (!_setOriginalCategoryId) {
			_setOriginalCategoryId = true;

			_originalCategoryId = _categoryId;
		}

		_categoryId = categoryId;
	}

	public long getOriginalCategoryId() {
		return _originalCategoryId;
	}

	@JSON
	public long getAudienceId() {
		return _audienceId;
	}

	public void setAudienceId(long audienceId) {
		_columnBitmask |= AUDIENCEID_COLUMN_BITMASK;

		if (!_setOriginalAudienceId) {
			_setOriginalAudienceId = true;

			_originalAudienceId = _audienceId;
		}

		_audienceId = audienceId;
	}

	public long getOriginalAudienceId() {
		return _originalAudienceId;
	}

	@JSON
	public long getResultTypeId() {
		return _resultTypeId;
	}

	public void setResultTypeId(long resultTypeId) {
		_columnBitmask |= RESULTTYPEID_COLUMN_BITMASK;

		if (!_setOriginalResultTypeId) {
			_setOriginalResultTypeId = true;

			_originalResultTypeId = _resultTypeId;
		}

		_resultTypeId = resultTypeId;
	}

	public long getOriginalResultTypeId() {
		return _originalResultTypeId;
	}

	@JSON
	public String getEntryCode() {
		if (_entryCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _entryCode;
		}
	}

	public void setEntryCode(String entryCode) {
		_entryCode = entryCode;
	}

	@JSON
	public String getEntryName() {
		if (_entryName == null) {
			return StringPool.BLANK;
		}
		else {
			return _entryName;
		}
	}

	public void setEntryName(String entryName) {
		_entryName = entryName;
	}

	@JSON
	public String getEntryDesc() {
		if (_entryDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _entryDesc;
		}
	}

	public void setEntryDesc(String entryDesc) {
		_entryDesc = entryDesc;
	}

	@JSON
	public String getProcessGuide() {
		if (_processGuide == null) {
			return StringPool.BLANK;
		}
		else {
			return _processGuide;
		}
	}

	public void setProcessGuide(String processGuide) {
		_processGuide = processGuide;
	}

	@JSON
	public String getProcessType() {
		if (_processType == null) {
			return StringPool.BLANK;
		}
		else {
			return _processType;
		}
	}

	public void setProcessType(String processType) {
		_processType = processType;
	}

	@JSON
	public String getProcessTime() {
		if (_processTime == null) {
			return StringPool.BLANK;
		}
		else {
			return _processTime;
		}
	}

	public void setProcessTime(String processTime) {
		_processTime = processTime;
	}

	@JSON
	public String getProcessFee() {
		if (_processFee == null) {
			return StringPool.BLANK;
		}
		else {
			return _processFee;
		}
	}

	public void setProcessFee(String processFee) {
		_processFee = processFee;
	}

	@JSON
	public String getProcessRequirement() {
		if (_processRequirement == null) {
			return StringPool.BLANK;
		}
		else {
			return _processRequirement;
		}
	}

	public void setProcessRequirement(String processRequirement) {
		_processRequirement = processRequirement;
	}

	@JSON
	public String getProcessFoundationDocument() {
		if (_processFoundationDocument == null) {
			return StringPool.BLANK;
		}
		else {
			return _processFoundationDocument;
		}
	}

	public void setProcessFoundationDocument(String processFoundationDocument) {
		_processFoundationDocument = processFoundationDocument;
	}

	@JSON
	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			TTHC_Entry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TTHC_Entry toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (TTHC_Entry)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		TTHC_EntryImpl tthc_EntryImpl = new TTHC_EntryImpl();

		tthc_EntryImpl.setEntryId(getEntryId());
		tthc_EntryImpl.setCompanyId(getCompanyId());
		tthc_EntryImpl.setGroupId(getGroupId());
		tthc_EntryImpl.setUserId(getUserId());
		tthc_EntryImpl.setUserName(getUserName());
		tthc_EntryImpl.setLevelId(getLevelId());
		tthc_EntryImpl.setDepartmentId(getDepartmentId());
		tthc_EntryImpl.setCategoryId(getCategoryId());
		tthc_EntryImpl.setAudienceId(getAudienceId());
		tthc_EntryImpl.setResultTypeId(getResultTypeId());
		tthc_EntryImpl.setEntryCode(getEntryCode());
		tthc_EntryImpl.setEntryName(getEntryName());
		tthc_EntryImpl.setEntryDesc(getEntryDesc());
		tthc_EntryImpl.setProcessGuide(getProcessGuide());
		tthc_EntryImpl.setProcessType(getProcessType());
		tthc_EntryImpl.setProcessTime(getProcessTime());
		tthc_EntryImpl.setProcessFee(getProcessFee());
		tthc_EntryImpl.setProcessRequirement(getProcessRequirement());
		tthc_EntryImpl.setProcessFoundationDocument(getProcessFoundationDocument());
		tthc_EntryImpl.setCreateDate(getCreateDate());
		tthc_EntryImpl.setModifiedDate(getModifiedDate());

		tthc_EntryImpl.resetOriginalValues();

		return tthc_EntryImpl;
	}

	public int compareTo(TTHC_Entry tthc_Entry) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), tthc_Entry.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		TTHC_Entry tthc_Entry = null;

		try {
			tthc_Entry = (TTHC_Entry)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = tthc_Entry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		TTHC_EntryModelImpl tthc_EntryModelImpl = this;

		tthc_EntryModelImpl._originalCompanyId = tthc_EntryModelImpl._companyId;

		tthc_EntryModelImpl._setOriginalCompanyId = false;

		tthc_EntryModelImpl._originalGroupId = tthc_EntryModelImpl._groupId;

		tthc_EntryModelImpl._setOriginalGroupId = false;

		tthc_EntryModelImpl._originalLevelId = tthc_EntryModelImpl._levelId;

		tthc_EntryModelImpl._setOriginalLevelId = false;

		tthc_EntryModelImpl._originalDepartmentId = tthc_EntryModelImpl._departmentId;

		tthc_EntryModelImpl._setOriginalDepartmentId = false;

		tthc_EntryModelImpl._originalCategoryId = tthc_EntryModelImpl._categoryId;

		tthc_EntryModelImpl._setOriginalCategoryId = false;

		tthc_EntryModelImpl._originalAudienceId = tthc_EntryModelImpl._audienceId;

		tthc_EntryModelImpl._setOriginalAudienceId = false;

		tthc_EntryModelImpl._originalResultTypeId = tthc_EntryModelImpl._resultTypeId;

		tthc_EntryModelImpl._setOriginalResultTypeId = false;

		tthc_EntryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<TTHC_Entry> toCacheModel() {
		TTHC_EntryCacheModel tthc_EntryCacheModel = new TTHC_EntryCacheModel();

		tthc_EntryCacheModel.entryId = getEntryId();

		tthc_EntryCacheModel.companyId = getCompanyId();

		tthc_EntryCacheModel.groupId = getGroupId();

		tthc_EntryCacheModel.userId = getUserId();

		tthc_EntryCacheModel.userName = getUserName();

		String userName = tthc_EntryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			tthc_EntryCacheModel.userName = null;
		}

		tthc_EntryCacheModel.levelId = getLevelId();

		tthc_EntryCacheModel.departmentId = getDepartmentId();

		tthc_EntryCacheModel.categoryId = getCategoryId();

		tthc_EntryCacheModel.audienceId = getAudienceId();

		tthc_EntryCacheModel.resultTypeId = getResultTypeId();

		tthc_EntryCacheModel.entryCode = getEntryCode();

		String entryCode = tthc_EntryCacheModel.entryCode;

		if ((entryCode != null) && (entryCode.length() == 0)) {
			tthc_EntryCacheModel.entryCode = null;
		}

		tthc_EntryCacheModel.entryName = getEntryName();

		String entryName = tthc_EntryCacheModel.entryName;

		if ((entryName != null) && (entryName.length() == 0)) {
			tthc_EntryCacheModel.entryName = null;
		}

		tthc_EntryCacheModel.entryDesc = getEntryDesc();

		String entryDesc = tthc_EntryCacheModel.entryDesc;

		if ((entryDesc != null) && (entryDesc.length() == 0)) {
			tthc_EntryCacheModel.entryDesc = null;
		}

		tthc_EntryCacheModel.processGuide = getProcessGuide();

		String processGuide = tthc_EntryCacheModel.processGuide;

		if ((processGuide != null) && (processGuide.length() == 0)) {
			tthc_EntryCacheModel.processGuide = null;
		}

		tthc_EntryCacheModel.processType = getProcessType();

		String processType = tthc_EntryCacheModel.processType;

		if ((processType != null) && (processType.length() == 0)) {
			tthc_EntryCacheModel.processType = null;
		}

		tthc_EntryCacheModel.processTime = getProcessTime();

		String processTime = tthc_EntryCacheModel.processTime;

		if ((processTime != null) && (processTime.length() == 0)) {
			tthc_EntryCacheModel.processTime = null;
		}

		tthc_EntryCacheModel.processFee = getProcessFee();

		String processFee = tthc_EntryCacheModel.processFee;

		if ((processFee != null) && (processFee.length() == 0)) {
			tthc_EntryCacheModel.processFee = null;
		}

		tthc_EntryCacheModel.processRequirement = getProcessRequirement();

		String processRequirement = tthc_EntryCacheModel.processRequirement;

		if ((processRequirement != null) && (processRequirement.length() == 0)) {
			tthc_EntryCacheModel.processRequirement = null;
		}

		tthc_EntryCacheModel.processFoundationDocument = getProcessFoundationDocument();

		String processFoundationDocument = tthc_EntryCacheModel.processFoundationDocument;

		if ((processFoundationDocument != null) &&
				(processFoundationDocument.length() == 0)) {
			tthc_EntryCacheModel.processFoundationDocument = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			tthc_EntryCacheModel.createDate = createDate.getTime();
		}
		else {
			tthc_EntryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			tthc_EntryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			tthc_EntryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return tthc_EntryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(43);

		sb.append("{entryId=");
		sb.append(getEntryId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", levelId=");
		sb.append(getLevelId());
		sb.append(", departmentId=");
		sb.append(getDepartmentId());
		sb.append(", categoryId=");
		sb.append(getCategoryId());
		sb.append(", audienceId=");
		sb.append(getAudienceId());
		sb.append(", resultTypeId=");
		sb.append(getResultTypeId());
		sb.append(", entryCode=");
		sb.append(getEntryCode());
		sb.append(", entryName=");
		sb.append(getEntryName());
		sb.append(", entryDesc=");
		sb.append(getEntryDesc());
		sb.append(", processGuide=");
		sb.append(getProcessGuide());
		sb.append(", processType=");
		sb.append(getProcessType());
		sb.append(", processTime=");
		sb.append(getProcessTime());
		sb.append(", processFee=");
		sb.append(getProcessFee());
		sb.append(", processRequirement=");
		sb.append(getProcessRequirement());
		sb.append(", processFoundationDocument=");
		sb.append(getProcessFoundationDocument());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(67);

		sb.append("<model><model-name>");
		sb.append("com.portal_egov.portlet.tthc.model.TTHC_Entry");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>entryId</column-name><column-value><![CDATA[");
		sb.append(getEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>levelId</column-name><column-value><![CDATA[");
		sb.append(getLevelId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>departmentId</column-name><column-value><![CDATA[");
		sb.append(getDepartmentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>categoryId</column-name><column-value><![CDATA[");
		sb.append(getCategoryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>audienceId</column-name><column-value><![CDATA[");
		sb.append(getAudienceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>resultTypeId</column-name><column-value><![CDATA[");
		sb.append(getResultTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entryCode</column-name><column-value><![CDATA[");
		sb.append(getEntryCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entryName</column-name><column-value><![CDATA[");
		sb.append(getEntryName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entryDesc</column-name><column-value><![CDATA[");
		sb.append(getEntryDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>processGuide</column-name><column-value><![CDATA[");
		sb.append(getProcessGuide());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>processType</column-name><column-value><![CDATA[");
		sb.append(getProcessType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>processTime</column-name><column-value><![CDATA[");
		sb.append(getProcessTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>processFee</column-name><column-value><![CDATA[");
		sb.append(getProcessFee());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>processRequirement</column-name><column-value><![CDATA[");
		sb.append(getProcessRequirement());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>processFoundationDocument</column-name><column-value><![CDATA[");
		sb.append(getProcessFoundationDocument());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = TTHC_Entry.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			TTHC_Entry.class
		};
	private long _entryId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private long _levelId;
	private long _originalLevelId;
	private boolean _setOriginalLevelId;
	private long _departmentId;
	private long _originalDepartmentId;
	private boolean _setOriginalDepartmentId;
	private long _categoryId;
	private long _originalCategoryId;
	private boolean _setOriginalCategoryId;
	private long _audienceId;
	private long _originalAudienceId;
	private boolean _setOriginalAudienceId;
	private long _resultTypeId;
	private long _originalResultTypeId;
	private boolean _setOriginalResultTypeId;
	private String _entryCode;
	private String _entryName;
	private String _entryDesc;
	private String _processGuide;
	private String _processType;
	private String _processTime;
	private String _processFee;
	private String _processRequirement;
	private String _processFoundationDocument;
	private Date _createDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private TTHC_Entry _escapedModelProxy;
}