/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.portal_egov.portlet.weblinks.service.base;

import com.liferay.counter.service.CounterLocalService;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.ResourceLocalService;
import com.liferay.portal.service.ResourceService;
import com.liferay.portal.service.UserLocalService;
import com.liferay.portal.service.UserService;
import com.liferay.portal.service.persistence.ResourcePersistence;
import com.liferay.portal.service.persistence.UserPersistence;

import com.portal_egov.portlet.weblinks.model.Weblink;
import com.portal_egov.portlet.weblinks.service.WeblinkCategoryLocalService;
import com.portal_egov.portlet.weblinks.service.WeblinkCategoryService;
import com.portal_egov.portlet.weblinks.service.WeblinkLocalService;
import com.portal_egov.portlet.weblinks.service.WeblinkService;
import com.portal_egov.portlet.weblinks.service.persistence.WeblinkCategoryFinder;
import com.portal_egov.portlet.weblinks.service.persistence.WeblinkCategoryPersistence;
import com.portal_egov.portlet.weblinks.service.persistence.WeblinkFinder;
import com.portal_egov.portlet.weblinks.service.persistence.WeblinkPersistence;

import javax.sql.DataSource;

/**
 * The base implementation of the weblink remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.portal_egov.portlet.weblinks.service.impl.WeblinkServiceImpl}.
 * </p>
 *
 * @author HungDX
 * @see com.portal_egov.portlet.weblinks.service.impl.WeblinkServiceImpl
 * @see com.portal_egov.portlet.weblinks.service.WeblinkServiceUtil
 * @generated
 */
public abstract class WeblinkServiceBaseImpl extends BaseServiceImpl
	implements WeblinkService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.portal_egov.portlet.weblinks.service.WeblinkServiceUtil} to access the weblink remote service.
	 */

	/**
	 * Returns the weblink local service.
	 *
	 * @return the weblink local service
	 */
	public WeblinkLocalService getWeblinkLocalService() {
		return weblinkLocalService;
	}

	/**
	 * Sets the weblink local service.
	 *
	 * @param weblinkLocalService the weblink local service
	 */
	public void setWeblinkLocalService(WeblinkLocalService weblinkLocalService) {
		this.weblinkLocalService = weblinkLocalService;
	}

	/**
	 * Returns the weblink remote service.
	 *
	 * @return the weblink remote service
	 */
	public WeblinkService getWeblinkService() {
		return weblinkService;
	}

	/**
	 * Sets the weblink remote service.
	 *
	 * @param weblinkService the weblink remote service
	 */
	public void setWeblinkService(WeblinkService weblinkService) {
		this.weblinkService = weblinkService;
	}

	/**
	 * Returns the weblink persistence.
	 *
	 * @return the weblink persistence
	 */
	public WeblinkPersistence getWeblinkPersistence() {
		return weblinkPersistence;
	}

	/**
	 * Sets the weblink persistence.
	 *
	 * @param weblinkPersistence the weblink persistence
	 */
	public void setWeblinkPersistence(WeblinkPersistence weblinkPersistence) {
		this.weblinkPersistence = weblinkPersistence;
	}

	/**
	 * Returns the weblink finder.
	 *
	 * @return the weblink finder
	 */
	public WeblinkFinder getWeblinkFinder() {
		return weblinkFinder;
	}

	/**
	 * Sets the weblink finder.
	 *
	 * @param weblinkFinder the weblink finder
	 */
	public void setWeblinkFinder(WeblinkFinder weblinkFinder) {
		this.weblinkFinder = weblinkFinder;
	}

	/**
	 * Returns the weblink category local service.
	 *
	 * @return the weblink category local service
	 */
	public WeblinkCategoryLocalService getWeblinkCategoryLocalService() {
		return weblinkCategoryLocalService;
	}

	/**
	 * Sets the weblink category local service.
	 *
	 * @param weblinkCategoryLocalService the weblink category local service
	 */
	public void setWeblinkCategoryLocalService(
		WeblinkCategoryLocalService weblinkCategoryLocalService) {
		this.weblinkCategoryLocalService = weblinkCategoryLocalService;
	}

	/**
	 * Returns the weblink category remote service.
	 *
	 * @return the weblink category remote service
	 */
	public WeblinkCategoryService getWeblinkCategoryService() {
		return weblinkCategoryService;
	}

	/**
	 * Sets the weblink category remote service.
	 *
	 * @param weblinkCategoryService the weblink category remote service
	 */
	public void setWeblinkCategoryService(
		WeblinkCategoryService weblinkCategoryService) {
		this.weblinkCategoryService = weblinkCategoryService;
	}

	/**
	 * Returns the weblink category persistence.
	 *
	 * @return the weblink category persistence
	 */
	public WeblinkCategoryPersistence getWeblinkCategoryPersistence() {
		return weblinkCategoryPersistence;
	}

	/**
	 * Sets the weblink category persistence.
	 *
	 * @param weblinkCategoryPersistence the weblink category persistence
	 */
	public void setWeblinkCategoryPersistence(
		WeblinkCategoryPersistence weblinkCategoryPersistence) {
		this.weblinkCategoryPersistence = weblinkCategoryPersistence;
	}

	/**
	 * Returns the weblink category finder.
	 *
	 * @return the weblink category finder
	 */
	public WeblinkCategoryFinder getWeblinkCategoryFinder() {
		return weblinkCategoryFinder;
	}

	/**
	 * Sets the weblink category finder.
	 *
	 * @param weblinkCategoryFinder the weblink category finder
	 */
	public void setWeblinkCategoryFinder(
		WeblinkCategoryFinder weblinkCategoryFinder) {
		this.weblinkCategoryFinder = weblinkCategoryFinder;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the resource remote service.
	 *
	 * @return the resource remote service
	 */
	public ResourceService getResourceService() {
		return resourceService;
	}

	/**
	 * Sets the resource remote service.
	 *
	 * @param resourceService the resource remote service
	 */
	public void setResourceService(ResourceService resourceService) {
		this.resourceService = resourceService;
	}

	/**
	 * Returns the resource persistence.
	 *
	 * @return the resource persistence
	 */
	public ResourcePersistence getResourcePersistence() {
		return resourcePersistence;
	}

	/**
	 * Sets the resource persistence.
	 *
	 * @param resourcePersistence the resource persistence
	 */
	public void setResourcePersistence(ResourcePersistence resourcePersistence) {
		this.resourcePersistence = resourcePersistence;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
	}

	protected Class<?> getModelClass() {
		return Weblink.class;
	}

	protected String getModelClassName() {
		return Weblink.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = weblinkPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = WeblinkLocalService.class)
	protected WeblinkLocalService weblinkLocalService;
	@BeanReference(type = WeblinkService.class)
	protected WeblinkService weblinkService;
	@BeanReference(type = WeblinkPersistence.class)
	protected WeblinkPersistence weblinkPersistence;
	@BeanReference(type = WeblinkFinder.class)
	protected WeblinkFinder weblinkFinder;
	@BeanReference(type = WeblinkCategoryLocalService.class)
	protected WeblinkCategoryLocalService weblinkCategoryLocalService;
	@BeanReference(type = WeblinkCategoryService.class)
	protected WeblinkCategoryService weblinkCategoryService;
	@BeanReference(type = WeblinkCategoryPersistence.class)
	protected WeblinkCategoryPersistence weblinkCategoryPersistence;
	@BeanReference(type = WeblinkCategoryFinder.class)
	protected WeblinkCategoryFinder weblinkCategoryFinder;
	@BeanReference(type = CounterLocalService.class)
	protected CounterLocalService counterLocalService;
	@BeanReference(type = ResourceLocalService.class)
	protected ResourceLocalService resourceLocalService;
	@BeanReference(type = ResourceService.class)
	protected ResourceService resourceService;
	@BeanReference(type = ResourcePersistence.class)
	protected ResourcePersistence resourcePersistence;
	@BeanReference(type = UserLocalService.class)
	protected UserLocalService userLocalService;
	@BeanReference(type = UserService.class)
	protected UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private WeblinkServiceClpInvoker _clpInvoker = new WeblinkServiceClpInvoker();
}