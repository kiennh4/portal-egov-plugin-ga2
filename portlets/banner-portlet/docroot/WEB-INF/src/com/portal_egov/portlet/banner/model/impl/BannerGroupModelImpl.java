/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.portal_egov.portlet.banner.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.portal_egov.portlet.banner.model.BannerGroup;
import com.portal_egov.portlet.banner.model.BannerGroupModel;
import com.portal_egov.portlet.banner.model.BannerGroupSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the BannerGroup service. Represents a row in the &quot;BannerGroup&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.portal_egov.portlet.banner.model.BannerGroupModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BannerGroupImpl}.
 * </p>
 *
 * @author HungDX
 * @see BannerGroupImpl
 * @see com.portal_egov.portlet.banner.model.BannerGroup
 * @see com.portal_egov.portlet.banner.model.BannerGroupModel
 * @generated
 */
@JSON(strict = true)
public class BannerGroupModelImpl extends BaseModelImpl<BannerGroup>
	implements BannerGroupModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a banner group model instance should use the {@link com.portal_egov.portlet.banner.model.BannerGroup} interface instead.
	 */
	public static final String TABLE_NAME = "BannerGroup";
	public static final Object[][] TABLE_COLUMNS = {
			{ "bannerGroupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "groupName", Types.VARCHAR },
			{ "groupDesc", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table BannerGroup (bannerGroupId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,groupName VARCHAR(300) null,groupDesc VARCHAR(500) null)";
	public static final String TABLE_SQL_DROP = "drop table BannerGroup";
	public static final String ORDER_BY_JPQL = " ORDER BY bannerGroup.groupName ASC";
	public static final String ORDER_BY_SQL = " ORDER BY BannerGroup.groupName ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.portal_egov.portlet.banner.model.BannerGroup"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.portal_egov.portlet.banner.model.BannerGroup"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.portal_egov.portlet.banner.model.BannerGroup"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static BannerGroup toModel(BannerGroupSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		BannerGroup model = new BannerGroupImpl();

		model.setBannerGroupId(soapModel.getBannerGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setGroupName(soapModel.getGroupName());
		model.setGroupDesc(soapModel.getGroupDesc());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<BannerGroup> toModels(BannerGroupSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<BannerGroup> models = new ArrayList<BannerGroup>(soapModels.length);

		for (BannerGroupSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.portal_egov.portlet.banner.model.BannerGroup"));

	public BannerGroupModelImpl() {
	}

	public long getPrimaryKey() {
		return _bannerGroupId;
	}

	public void setPrimaryKey(long primaryKey) {
		setBannerGroupId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_bannerGroupId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return BannerGroup.class;
	}

	public String getModelClassName() {
		return BannerGroup.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("bannerGroupId", getBannerGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("groupName", getGroupName());
		attributes.put("groupDesc", getGroupDesc());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long bannerGroupId = (Long)attributes.get("bannerGroupId");

		if (bannerGroupId != null) {
			setBannerGroupId(bannerGroupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String groupName = (String)attributes.get("groupName");

		if (groupName != null) {
			setGroupName(groupName);
		}

		String groupDesc = (String)attributes.get("groupDesc");

		if (groupDesc != null) {
			setGroupDesc(groupDesc);
		}
	}

	@JSON
	public long getBannerGroupId() {
		return _bannerGroupId;
	}

	public void setBannerGroupId(long bannerGroupId) {
		_bannerGroupId = bannerGroupId;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	public String getGroupName() {
		if (_groupName == null) {
			return StringPool.BLANK;
		}
		else {
			return _groupName;
		}
	}

	public void setGroupName(String groupName) {
		_columnBitmask = -1L;

		_groupName = groupName;
	}

	@JSON
	public String getGroupDesc() {
		if (_groupDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _groupDesc;
		}
	}

	public void setGroupDesc(String groupDesc) {
		_groupDesc = groupDesc;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			BannerGroup.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public BannerGroup toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (BannerGroup)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		BannerGroupImpl bannerGroupImpl = new BannerGroupImpl();

		bannerGroupImpl.setBannerGroupId(getBannerGroupId());
		bannerGroupImpl.setCompanyId(getCompanyId());
		bannerGroupImpl.setGroupId(getGroupId());
		bannerGroupImpl.setUserId(getUserId());
		bannerGroupImpl.setUserName(getUserName());
		bannerGroupImpl.setCreateDate(getCreateDate());
		bannerGroupImpl.setModifiedDate(getModifiedDate());
		bannerGroupImpl.setGroupName(getGroupName());
		bannerGroupImpl.setGroupDesc(getGroupDesc());

		bannerGroupImpl.resetOriginalValues();

		return bannerGroupImpl;
	}

	public int compareTo(BannerGroup bannerGroup) {
		int value = 0;

		value = getGroupName().compareTo(bannerGroup.getGroupName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		BannerGroup bannerGroup = null;

		try {
			bannerGroup = (BannerGroup)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = bannerGroup.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		BannerGroupModelImpl bannerGroupModelImpl = this;

		bannerGroupModelImpl._originalCompanyId = bannerGroupModelImpl._companyId;

		bannerGroupModelImpl._setOriginalCompanyId = false;

		bannerGroupModelImpl._originalGroupId = bannerGroupModelImpl._groupId;

		bannerGroupModelImpl._setOriginalGroupId = false;

		bannerGroupModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<BannerGroup> toCacheModel() {
		BannerGroupCacheModel bannerGroupCacheModel = new BannerGroupCacheModel();

		bannerGroupCacheModel.bannerGroupId = getBannerGroupId();

		bannerGroupCacheModel.companyId = getCompanyId();

		bannerGroupCacheModel.groupId = getGroupId();

		bannerGroupCacheModel.userId = getUserId();

		bannerGroupCacheModel.userName = getUserName();

		String userName = bannerGroupCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			bannerGroupCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			bannerGroupCacheModel.createDate = createDate.getTime();
		}
		else {
			bannerGroupCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			bannerGroupCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			bannerGroupCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		bannerGroupCacheModel.groupName = getGroupName();

		String groupName = bannerGroupCacheModel.groupName;

		if ((groupName != null) && (groupName.length() == 0)) {
			bannerGroupCacheModel.groupName = null;
		}

		bannerGroupCacheModel.groupDesc = getGroupDesc();

		String groupDesc = bannerGroupCacheModel.groupDesc;

		if ((groupDesc != null) && (groupDesc.length() == 0)) {
			bannerGroupCacheModel.groupDesc = null;
		}

		return bannerGroupCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{bannerGroupId=");
		sb.append(getBannerGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", groupName=");
		sb.append(getGroupName());
		sb.append(", groupDesc=");
		sb.append(getGroupDesc());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.portal_egov.portlet.banner.model.BannerGroup");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>bannerGroupId</column-name><column-value><![CDATA[");
		sb.append(getBannerGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupName</column-name><column-value><![CDATA[");
		sb.append(getGroupName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupDesc</column-name><column-value><![CDATA[");
		sb.append(getGroupDesc());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = BannerGroup.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			BannerGroup.class
		};
	private long _bannerGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _groupName;
	private String _groupDesc;
	private long _columnBitmask;
	private BannerGroup _escapedModelProxy;
}